<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group___decoder" xml:lang="en-US">
<title>Decoders and encoders for different protocols</title>
<indexterm><primary>Decoders and encoders for different protocols</primary></indexterm>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_group___decoder_1ga97929dcf9c3088fe6b5ea9984179ee2a">BOSEWAVE_BITS</link>   16</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga01910d7deda73c7866abb73405e982d5">BOSEWAVE_HEADER_MARK</link>   1060</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga1d790d85945d62aeac5b1324dcbc0654">BOSEWAVE_HEADER_SPACE</link>   1450</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga4a7b99be53662b1689675e92c5e8d640">BOSEWAVE_BIT_MARK</link>   534</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gac5abcecc1e901cf947864d70ef5fd685">BOSEWAVE_ONE_SPACE</link>   468</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga1a90821da64722ab8ddaefe4d084c4b9">BOSEWAVE_ZERO_SPACE</link>   1447</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gaaccf319744a0908453bf1e686a1eccf7">BOSEWAVE_REPEAT_SPACE</link>   52000</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga0fa706b9b7b446be7508c1d42a287b87">DENON_ADDRESS_BITS</link>   5</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga90391cc9021f25e3db08a4ecb6a3ce5b">DENON_COMMAND_BITS</link>   8</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gac4d956744c670f42909797aa1a9f66d2">DENON_FRAME_BITS</link>   2</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gaf72e9c52e59ed81ef46bfd19a8b15613">DENON_BITS</link>   (<link linkend="_group___decoder_1ga0fa706b9b7b446be7508c1d42a287b87">DENON_ADDRESS_BITS</link> + <link linkend="_group___decoder_1ga90391cc9021f25e3db08a4ecb6a3ce5b">DENON_COMMAND_BITS</link> + <link linkend="_group___decoder_1gac4d956744c670f42909797aa1a9f66d2">DENON_FRAME_BITS</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gad25dca3fd4ddc00b460b66007be0b2bb">DENON_UNIT</link>   260</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gaa1e687145d4c8b75ae218193b16ecc8d">DENON_BIT_MARK</link>   <link linkend="_group___decoder_1gad25dca3fd4ddc00b460b66007be0b2bb">DENON_UNIT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga8bf7f0f59510bb18534fc8766c9fe01e">DENON_ONE_SPACE</link>   (7 * <link linkend="_group___decoder_1gad25dca3fd4ddc00b460b66007be0b2bb">DENON_UNIT</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga502f8eb1ebb964692c6593a580713064">DENON_ZERO_SPACE</link>   (3 * <link linkend="_group___decoder_1gad25dca3fd4ddc00b460b66007be0b2bb">DENON_UNIT</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga2f1a46669381f4761b484d731a83997e">DENON_AUTO_REPEAT_SPACE</link>   45000</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gadf29400cf8e1622f6bc747dff0944861">DENON_REPEAT_PERIOD</link>   110000</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga6dc27eb34cfad41af16ceb70357898da">DENON_HEADER_MARK</link>   <link linkend="_group___decoder_1gad25dca3fd4ddc00b460b66007be0b2bb">DENON_UNIT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gaba7b22de3732ce2d613f16730f2477d8">DENON_HEADER_SPACE</link>   (3 * <link linkend="_group___decoder_1gad25dca3fd4ddc00b460b66007be0b2bb">DENON_UNIT</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gaede1737ff1f8da95a80c7aa059ba2f13">JVC_ADDRESS_BITS</link>   8</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga6c37ba21b2b04d86a7c5c028dd0edc9e">JVC_COMMAND_BITS</link>   8</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gafcb4f4e6144a1e3c779b2b8777b8f8ac">JVC_BITS</link>   (<link linkend="_group___decoder_1gaede1737ff1f8da95a80c7aa059ba2f13">JVC_ADDRESS_BITS</link> + <link linkend="_group___decoder_1ga6c37ba21b2b04d86a7c5c028dd0edc9e">JVC_COMMAND_BITS</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gaa79a9fdad87400415aa367568b9fdb98">JVC_UNIT</link>   526</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gaec51a5a6206fbaae28a05966a840069d">JVC_HEADER_MARK</link>   (16 * <link linkend="_group___decoder_1gaa79a9fdad87400415aa367568b9fdb98">JVC_UNIT</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga44feb6af98dbbcf234ef970742b511a0">JVC_HEADER_SPACE</link>   (8 * <link linkend="_group___decoder_1gaa79a9fdad87400415aa367568b9fdb98">JVC_UNIT</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga3eb74f5b177f68386ff35bd41e09a33c">JVC_BIT_MARK</link>   <link linkend="_group___decoder_1gaa79a9fdad87400415aa367568b9fdb98">JVC_UNIT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gac66f4778d06e0a5eda29695f4a0ad9fa">JVC_ONE_SPACE</link>   (3 * <link linkend="_group___decoder_1gaa79a9fdad87400415aa367568b9fdb98">JVC_UNIT</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga3e161d70fe56f2ed0f76b5421fd5b1b3">JVC_ZERO_SPACE</link>   <link linkend="_group___decoder_1gaa79a9fdad87400415aa367568b9fdb98">JVC_UNIT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga1dcb7952853b00adb9a6869ce034b7f2">JVC_REPEAT_SPACE</link>   (uint16_t)(45 * <link linkend="_group___decoder_1gaa79a9fdad87400415aa367568b9fdb98">JVC_UNIT</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gaa40dc0f36a788a2347dd601eb421fac9">KASEIKYO_VENDOR_ID_BITS</link>   16</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga00026f9a2bcd232d4cb191b9e9ce9fdb">KASEIKYO_VENDOR_ID_PARITY_BITS</link>   4</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga2980cf86e2d6c0af8df3c7a29ff9468f">KASEIKYO_ADDRESS_BITS</link>   12</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga46f7e707bf79a6b1657bd29bfaaa7522">KASEIKYO_COMMAND_BITS</link>   8</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga4d69f0966b844257d734539d4547ea80">KASEIKYO_PARITY_BITS</link>   8</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga592fb0e33827b607bb6c43072526575c">KASEIKYO_BITS</link>   (<link linkend="_group___decoder_1gaa40dc0f36a788a2347dd601eb421fac9">KASEIKYO_VENDOR_ID_BITS</link> + <link linkend="_group___decoder_1ga00026f9a2bcd232d4cb191b9e9ce9fdb">KASEIKYO_VENDOR_ID_PARITY_BITS</link> + <link linkend="_group___decoder_1ga2980cf86e2d6c0af8df3c7a29ff9468f">KASEIKYO_ADDRESS_BITS</link> + <link linkend="_group___decoder_1ga46f7e707bf79a6b1657bd29bfaaa7522">KASEIKYO_COMMAND_BITS</link> + <link linkend="_group___decoder_1ga4d69f0966b844257d734539d4547ea80">KASEIKYO_PARITY_BITS</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga902a330843509bcaff6a5f0bf4f38a9d">KASEIKYO_UNIT</link>   432</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gaced5ece1bb2d810f20f6a02142181699">KASEIKYO_HEADER_MARK</link>   (8 * <link linkend="_group___decoder_1ga902a330843509bcaff6a5f0bf4f38a9d">KASEIKYO_UNIT</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga5bad2bab824504b4289cf034c8070b60">KASEIKYO_HEADER_SPACE</link>   (4 * <link linkend="_group___decoder_1ga902a330843509bcaff6a5f0bf4f38a9d">KASEIKYO_UNIT</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga69ea9935d680733cf8e37181e7df9184">KASEIKYO_BIT_MARK</link>   <link linkend="_group___decoder_1ga902a330843509bcaff6a5f0bf4f38a9d">KASEIKYO_UNIT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga70e2a773b7615e33846a98556ef5e43f">KASEIKYO_ONE_SPACE</link>   (3 * <link linkend="_group___decoder_1ga902a330843509bcaff6a5f0bf4f38a9d">KASEIKYO_UNIT</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga11d27c9a23d42f44d941e0e9a678fcf5">KASEIKYO_ZERO_SPACE</link>   <link linkend="_group___decoder_1ga902a330843509bcaff6a5f0bf4f38a9d">KASEIKYO_UNIT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga96b2393ae13bd45c6b13074a27e800eb">KASEIKYO_AVERAGE_DURATION</link>   56000</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gab8c7f8e151b67c06523fce7193dd5cdd">KASEIKYO_REPEAT_PERIOD</link>   130000</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga33bd304970bafe120a91b03a08718ff9">KASEIKYO_REPEAT_SPACE</link>   (<link linkend="_group___decoder_1gab8c7f8e151b67c06523fce7193dd5cdd">KASEIKYO_REPEAT_PERIOD</link> - <link linkend="_group___decoder_1ga96b2393ae13bd45c6b13074a27e800eb">KASEIKYO_AVERAGE_DURATION</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gab8e6b6ef29172f2a9f2e3690fcdac4f3">KASEIKYO_DATA_BITS</link>   32</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga39a09b56f06d4ed10980f04da1cf7d3c">LEGO_CHANNEL_BITS</link>   4</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga22bc0b6a014c407189fbdda9de0d9460">LEGO_MODE_BITS</link>   4</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga24e8ec9c66fa683bbe0cf8e2bf9f464f">LEGO_COMMAND_BITS</link>   4</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga7da9e4d69027085b8a05c99dedd711c8">LEGO_PARITY_BITS</link>   4</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gaba11a8cdf603ec3a9f581e0316065ccd">LEGO_BITS</link>   (<link linkend="_group___decoder_1ga39a09b56f06d4ed10980f04da1cf7d3c">LEGO_CHANNEL_BITS</link> + <link linkend="_group___decoder_1ga22bc0b6a014c407189fbdda9de0d9460">LEGO_MODE_BITS</link> + <link linkend="_group___decoder_1ga24e8ec9c66fa683bbe0cf8e2bf9f464f">LEGO_COMMAND_BITS</link> + <link linkend="_group___decoder_1ga7da9e4d69027085b8a05c99dedd711c8">LEGO_PARITY_BITS</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga413eee2968c317cddd592f169a0ae4d7">LEGO_HEADER_MARK</link>   158</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga9f0dd70b25bfe364a5959c6531c1838c">LEGO_HEADER_SPACE</link>   1026</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga38fc71b4c4cfb05d183d1656365755ab">LEGO_BIT_MARK</link>   158</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga8aefc728574d08153c73f21bdb4cb152">LEGO_ONE_SPACE</link>   553</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga8d06796444b99735c047301f52d5fcfc">LEGO_ZERO_SPACE</link>   263</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gacffc86d1bdb9fa68d39408e230349be3">LEGO_AVERAGE_DURATION</link>   11000</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga92da2b7d1208de09d496438a32e46ecf">LEGO_AUTO_REPEAT_PERIOD_MIN</link>   110000</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gadb5b6035eb795ce7def85993415a8d38">LEGO_AUTO_REPEAT_PERIOD_MAX</link>   230000</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga195b3b0d3512e9321d7bacc052207852">LG_ADDRESS_BITS</link>   8</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gadf67f00c097160de2557c969ad6248a8">LG_COMMAND_BITS</link>   16</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga0d92dd1cd56a7f82b6281796042b94b5">LG_CHECKSUM_BITS</link>   4</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gacaf693c322cb866cec3eafecfbe35b66">LG_BITS</link>   (<link linkend="_group___decoder_1ga195b3b0d3512e9321d7bacc052207852">LG_ADDRESS_BITS</link> + <link linkend="_group___decoder_1gadf67f00c097160de2557c969ad6248a8">LG_COMMAND_BITS</link> + <link linkend="_group___decoder_1ga0d92dd1cd56a7f82b6281796042b94b5">LG_CHECKSUM_BITS</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga677656ae675af73405b65e0228ce6bc9">LG_UNIT</link>   500</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gae9e8390ffc6850202815112c8493a0f6">LG_HEADER_MARK</link>   (18 * <link linkend="_group___decoder_1ga677656ae675af73405b65e0228ce6bc9">LG_UNIT</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga5eccb52c8ef993ad228c6968953c583c">LG_HEADER_SPACE</link>   4200</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga5867052dc3896b7ec94b9c24a4c89cc8">LG2_HEADER_MARK</link>   (6 * <link linkend="_group___decoder_1ga677656ae675af73405b65e0228ce6bc9">LG_UNIT</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga6d0d031a5d287ef60e683a09b7bf05bc">LG2_HEADER_SPACE</link>   (19 * <link linkend="_group___decoder_1ga677656ae675af73405b65e0228ce6bc9">LG_UNIT</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gacb12362c8e9ab1034036c4efc20d57f5">LG_BIT_MARK</link>   <link linkend="_group___decoder_1ga677656ae675af73405b65e0228ce6bc9">LG_UNIT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga5b41314206902e7eec1c396b3999eab9">LG_ONE_SPACE</link>   1580</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga8f7c839827bd908025687a175453f50a">LG_ZERO_SPACE</link>   550</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga98bc79faab54e6927516f308a0a07cb5">LG_REPEAT_HEADER_SPACE</link>   (4 * <link linkend="_group___decoder_1ga677656ae675af73405b65e0228ce6bc9">LG_UNIT</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gaba4191fd7407de304e799ce93d14ac93">LG_AVERAGE_DURATION</link>   58000</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga4d1e6191572c1154992f1d566556f6a2">LG_REPEAT_DURATION</link>   (<link linkend="_group___decoder_1gae9e8390ffc6850202815112c8493a0f6">LG_HEADER_MARK</link>  + <link linkend="_group___decoder_1ga98bc79faab54e6927516f308a0a07cb5">LG_REPEAT_HEADER_SPACE</link> + <link linkend="_group___decoder_1gacb12362c8e9ab1034036c4efc20d57f5">LG_BIT_MARK</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gaa478740acb2cb7dd0737a791b90b33fc">LG_REPEAT_PERIOD</link>   110000</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga95abf0b48968f9aa3ce0582282cb53c8">LG_REPEAT_SPACE</link>   (<link linkend="_group___decoder_1gaa478740acb2cb7dd0737a791b90b33fc">LG_REPEAT_PERIOD</link> - <link linkend="_group___decoder_1gaba4191fd7407de304e799ce93d14ac93">LG_AVERAGE_DURATION</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga2ab110e480a4b16fe516c2afd16a1ea2">NEC_ADDRESS_BITS</link>   16</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga07e295da53565eb7146072bdfeb2ed32">NEC_COMMAND_BITS</link>   16</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gaa82c77bc0131ac28bc3534b8cf3422bc">NEC_BITS</link>   (<link linkend="_group___tiny_receiver_1ga2ab110e480a4b16fe516c2afd16a1ea2">NEC_ADDRESS_BITS</link> + <link linkend="_group___tiny_receiver_1ga07e295da53565eb7146072bdfeb2ed32">NEC_COMMAND_BITS</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gaf3317b0cf5cf7d3063addbaa0a256158">NEC_UNIT</link>   560</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga8d393b95d8df4dfa15873aec6a37965e">NEC_HEADER_MARK</link>   (16 * <link linkend="_group___tiny_receiver_1gaf3317b0cf5cf7d3063addbaa0a256158">NEC_UNIT</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga5c728ed320ffee624e26767be0a80404">NEC_HEADER_SPACE</link>   (8 * <link linkend="_group___tiny_receiver_1gaf3317b0cf5cf7d3063addbaa0a256158">NEC_UNIT</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga3abbe30ef3781c1cf2490003e1c1443a">NEC_BIT_MARK</link>   <link linkend="_group___tiny_receiver_1gaf3317b0cf5cf7d3063addbaa0a256158">NEC_UNIT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga5ac04ec8b2185c9fb257d39c472733b1">NEC_ONE_SPACE</link>   (3 * <link linkend="_group___tiny_receiver_1gaf3317b0cf5cf7d3063addbaa0a256158">NEC_UNIT</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga5ee46914e98bf7f87f32a7104843b243">NEC_ZERO_SPACE</link>   <link linkend="_group___tiny_receiver_1gaf3317b0cf5cf7d3063addbaa0a256158">NEC_UNIT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga91880ffa0b09391f2c827d3a1c565abf">NEC_REPEAT_HEADER_SPACE</link>   (4 * <link linkend="_group___tiny_receiver_1gaf3317b0cf5cf7d3063addbaa0a256158">NEC_UNIT</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gad086d93e5fb59de2890e12653a9c2f4f">NEC_AVERAGE_DURATION</link>   62000</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga0e78e019c888522fce3d5a4d4104753d">NEC_REPEAT_DURATION</link>   (<link linkend="_group___tiny_receiver_1ga8d393b95d8df4dfa15873aec6a37965e">NEC_HEADER_MARK</link>  + <link linkend="_group___tiny_receiver_1ga91880ffa0b09391f2c827d3a1c565abf">NEC_REPEAT_HEADER_SPACE</link> + <link linkend="_group___tiny_receiver_1ga3abbe30ef3781c1cf2490003e1c1443a">NEC_BIT_MARK</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gac2dab5c4a22f8c4915217d3ee4676f08">NEC_REPEAT_PERIOD</link>   110000</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gad075e7ecc3052e071d1c9076137c2b35">NEC_REPEAT_SPACE</link>   (<link linkend="_group___tiny_receiver_1gac2dab5c4a22f8c4915217d3ee4676f08">NEC_REPEAT_PERIOD</link> - <link linkend="_group___decoder_1gad086d93e5fb59de2890e12653a9c2f4f">NEC_AVERAGE_DURATION</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga4d268b1bd7431cab88c570c446d4810b">APPLE_ADDRESS</link>   0x87EE</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga6a67feee58533e6520c703ce2f21c74d">RC5_ADDRESS_BITS</link>   5</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gad486165e9022f3ee3a36c2d6c0068901">RC5_COMMAND_BITS</link>   6</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga736ff0f98dd2db7eb6998fd0d99f4764">RC5_COMMAND_FIELD_BIT</link>   1</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga5b54edc58ba3827fa05eb934f570f27d">RC5_TOGGLE_BIT</link>   1</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gabc94db01a9d2e2f8caccaa32ec2ffa8a">RC5_BITS</link>   (<link linkend="_group___decoder_1ga736ff0f98dd2db7eb6998fd0d99f4764">RC5_COMMAND_FIELD_BIT</link> + <link linkend="_group___decoder_1ga5b54edc58ba3827fa05eb934f570f27d">RC5_TOGGLE_BIT</link> + <link linkend="_group___decoder_1ga6a67feee58533e6520c703ce2f21c74d">RC5_ADDRESS_BITS</link> + <link linkend="_group___decoder_1gad486165e9022f3ee3a36c2d6c0068901">RC5_COMMAND_BITS</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga29c2e67aa7b0ee1ed87b0e154eaf6f69">RC5_UNIT</link>   889</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gaace57f5ebe7ac2d2f80a496702065627">MIN_RC5_MARKS</link>   ((<link linkend="_group___decoder_1gabc94db01a9d2e2f8caccaa32ec2ffa8a">RC5_BITS</link> + 1) / 2)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga72ef3521775a056c2009b22cc9a50a28">RC5_DURATION</link>   (15L * <link linkend="_group___decoder_1ga29c2e67aa7b0ee1ed87b0e154eaf6f69">RC5_UNIT</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga985b139053cd231f47e363981e6a32e4">RC5_REPEAT_PERIOD</link>   (128L * <link linkend="_group___decoder_1ga29c2e67aa7b0ee1ed87b0e154eaf6f69">RC5_UNIT</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga97029fbe8be39f78c835bf30040a743b">RC5_REPEAT_SPACE</link>   (<link linkend="_group___decoder_1ga985b139053cd231f47e363981e6a32e4">RC5_REPEAT_PERIOD</link> - <link linkend="_group___decoder_1ga72ef3521775a056c2009b22cc9a50a28">RC5_DURATION</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga864aa6044417289d715eb819c1be3e10">MIN_RC6_SAMPLES</link>   1</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gab20744e40f55c70de7fd11c163643d03">RC6_RPT_LENGTH</link>   46000</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gabe308752857e0c9d2aa632459efff68b">RC6_LEADING_BIT</link>   1</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gace06a80186f826baaec50247cccd9fa6">RC6_MODE_BITS</link>   3</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga2899c3ab9e20e006a196f1e959e496f7">RC6_TOGGLE_BIT</link>   1</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga998e578fa80abf8e58794f162b4e9c4f">RC6_ADDRESS_BITS</link>   8</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga2693e6912aaa2615f31b2c8298e84e83">RC6_COMMAND_BITS</link>   8</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gaf0ebba4bfe3db1f49f593ac87ecc78ea">RC6_BITS</link>   (<link linkend="_group___decoder_1gabe308752857e0c9d2aa632459efff68b">RC6_LEADING_BIT</link> + <link linkend="_group___decoder_1gace06a80186f826baaec50247cccd9fa6">RC6_MODE_BITS</link> + <link linkend="_group___decoder_1ga2899c3ab9e20e006a196f1e959e496f7">RC6_TOGGLE_BIT</link> + <link linkend="_group___decoder_1ga998e578fa80abf8e58794f162b4e9c4f">RC6_ADDRESS_BITS</link> + <link linkend="_group___decoder_1ga2693e6912aaa2615f31b2c8298e84e83">RC6_COMMAND_BITS</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga0c8422e20817bc71f9b16f013d282800">RC6_UNIT</link>   444</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga89c0498dae46351ae778a263bd1c90c9">RC6_HEADER_MARK</link>   (6 * <link linkend="_group___decoder_1ga0c8422e20817bc71f9b16f013d282800">RC6_UNIT</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga5c7e98f561ee9ffea33dbe1f5c6d124a">RC6_HEADER_SPACE</link>   (2 * <link linkend="_group___decoder_1ga0c8422e20817bc71f9b16f013d282800">RC6_UNIT</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga80d136268d4d727245922ae0c85464c3">RC6_TRAILING_SPACE</link>   (6 * <link linkend="_group___decoder_1ga0c8422e20817bc71f9b16f013d282800">RC6_UNIT</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga9d1c512ada596652f29f24b17ef7f900">MIN_RC6_MARKS</link>   4 + ((<link linkend="_group___decoder_1ga998e578fa80abf8e58794f162b4e9c4f">RC6_ADDRESS_BITS</link> + <link linkend="_group___decoder_1ga2693e6912aaa2615f31b2c8298e84e83">RC6_COMMAND_BITS</link>) / 2)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga359feaa5ff007c309d1bce3debe3f579">RC6_REPEAT_SPACE</link>   107000</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga283d6e91f30293b52d3b0d7aeb11c2cb">SAMSUNG_ADDRESS_BITS</link>   16</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga12d540662f0eaef3297b2fee1be653b9">SAMSUNG_COMMAND16_BITS</link>   16</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gab7035588b69b6a1c30dd496a1e8351c0">SAMSUNG_COMMAND32_BITS</link>   32</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gafc27510b737f1ce90042bee6ef245592">SAMSUNG_BITS</link>   (<link linkend="_group___decoder_1ga283d6e91f30293b52d3b0d7aeb11c2cb">SAMSUNG_ADDRESS_BITS</link> + <link linkend="_group___decoder_1ga12d540662f0eaef3297b2fee1be653b9">SAMSUNG_COMMAND16_BITS</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gac442c5511ca3736cafc683e2507db6b4">SAMSUNG48_BITS</link>   (<link linkend="_group___decoder_1ga283d6e91f30293b52d3b0d7aeb11c2cb">SAMSUNG_ADDRESS_BITS</link> + <link linkend="_group___decoder_1gab7035588b69b6a1c30dd496a1e8351c0">SAMSUNG_COMMAND32_BITS</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga651bd895c4ad553171399aebcc7297ea">SAMSUNG_UNIT</link>   553</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gaba5b0346e4a7aca7a202768a6abf7cae">SAMSUNG_HEADER_MARK</link>   (8 * <link linkend="_group___decoder_1ga651bd895c4ad553171399aebcc7297ea">SAMSUNG_UNIT</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga22d50c9e05c2de32c73cda0a9b05a8c4">SAMSUNG_HEADER_SPACE</link>   (8 * <link linkend="_group___decoder_1ga651bd895c4ad553171399aebcc7297ea">SAMSUNG_UNIT</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga838b0e3727e67fd3b986d2f3b77ffb7c">SAMSUNG_BIT_MARK</link>   <link linkend="_group___decoder_1ga651bd895c4ad553171399aebcc7297ea">SAMSUNG_UNIT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga139bb990e482496d098c49c6409047bf">SAMSUNG_ONE_SPACE</link>   (3 * <link linkend="_group___decoder_1ga651bd895c4ad553171399aebcc7297ea">SAMSUNG_UNIT</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga47aa3d1eeb1f86ee48a8c9a9e2c1e4d2">SAMSUNG_ZERO_SPACE</link>   <link linkend="_group___decoder_1ga651bd895c4ad553171399aebcc7297ea">SAMSUNG_UNIT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gad3410f25a216ddb5a2a975d3aa33fdcd">SAMSUNG_AVERAGE_DURATION</link>   55000</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga2d02df520e7d312e045090f6f1e62897">SAMSUNG_REPEAT_DURATION</link>   (<link linkend="_group___decoder_1gaba5b0346e4a7aca7a202768a6abf7cae">SAMSUNG_HEADER_MARK</link>  + <link linkend="_group___decoder_1ga22d50c9e05c2de32c73cda0a9b05a8c4">SAMSUNG_HEADER_SPACE</link> + <link linkend="_group___decoder_1ga838b0e3727e67fd3b986d2f3b77ffb7c">SAMSUNG_BIT_MARK</link> + <link linkend="_group___decoder_1ga47aa3d1eeb1f86ee48a8c9a9e2c1e4d2">SAMSUNG_ZERO_SPACE</link> + <link linkend="_group___decoder_1ga838b0e3727e67fd3b986d2f3b77ffb7c">SAMSUNG_BIT_MARK</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga7611f37500fda881b03220c8a7fd9d74">SAMSUNG_REPEAT_PERIOD</link>   110000</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga8bf3de6a0e95b5fcdee222bb59170be3">SONY_ADDRESS_BITS</link>   5</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga41b47908d312a62738b47d02f5996bd7">SONY_COMMAND_BITS</link>   7</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga706923dfa59320924f91e826c170789f">SONY_EXTRA_BITS</link>   8</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga081ed9a7e2b2ee39c9ca9198f655160e">SONY_BITS_MIN</link>   (<link linkend="_group___decoder_1ga41b47908d312a62738b47d02f5996bd7">SONY_COMMAND_BITS</link> + <link linkend="_group___decoder_1ga8bf3de6a0e95b5fcdee222bb59170be3">SONY_ADDRESS_BITS</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gaf3244e66cd80474af035911fbbe6d46d">SONY_BITS_15</link>   (<link linkend="_group___decoder_1ga41b47908d312a62738b47d02f5996bd7">SONY_COMMAND_BITS</link> + <link linkend="_group___decoder_1ga8bf3de6a0e95b5fcdee222bb59170be3">SONY_ADDRESS_BITS</link> + 3)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga0122c3deff0aa5a81ccb9cc675d87e57">SONY_BITS_MAX</link>   (<link linkend="_group___decoder_1ga41b47908d312a62738b47d02f5996bd7">SONY_COMMAND_BITS</link> + <link linkend="_group___decoder_1ga8bf3de6a0e95b5fcdee222bb59170be3">SONY_ADDRESS_BITS</link> + <link linkend="_group___decoder_1ga706923dfa59320924f91e826c170789f">SONY_EXTRA_BITS</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga441cf836ba5e41a476cfaed754619e7d">SONY_UNIT</link>   600</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gaa9e51d168691efecbc72d9ab08ebe167">SONY_HEADER_MARK</link>   (4 * <link linkend="_group___decoder_1ga441cf836ba5e41a476cfaed754619e7d">SONY_UNIT</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gaaa7d595e4d4b3857f3165bbc7682ae36">SONY_ONE_MARK</link>   (2 * <link linkend="_group___decoder_1ga441cf836ba5e41a476cfaed754619e7d">SONY_UNIT</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gaacafe83ae7609e591a845d188477b4e6">SONY_ZERO_MARK</link>   <link linkend="_group___decoder_1ga441cf836ba5e41a476cfaed754619e7d">SONY_UNIT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga6bed381432686c9434b0debbda4936d0">SONY_SPACE</link>   <link linkend="_group___decoder_1ga441cf836ba5e41a476cfaed754619e7d">SONY_UNIT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gaa2fa5f3ee92363009f82407872c42549">SONY_AVERAGE_DURATION</link>   21000</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga04bbfe2a8ffe2d8909f20223dc7ae573">SONY_REPEAT_PERIOD</link>   45000</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga99ad5f89aa2e68db38c3ee54d925673e">SONY_REPEAT_SPACE</link>   (<link linkend="_group___decoder_1ga04bbfe2a8ffe2d8909f20223dc7ae573">SONY_REPEAT_PERIOD</link> - <link linkend="_group___decoder_1gaa2fa5f3ee92363009f82407872c42549">SONY_AVERAGE_DURATION</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gae8967821a9dae0e890bdb9d95a3ee6c0">SONY_DOUBLE_SPACE_USECS</link>   500</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga1c501f7c080c2cf8f5593ca1fb2f0b24">WHYNTER_BITS</link>   32</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga27674e95707b010ac4b064524006f80e">WHYNTER_HEADER_MARK</link>   2850</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga516861bba8fb7df36adfcef25f2ae493">WHYNTER_HEADER_SPACE</link>   2850</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga7cd99216d53c9b798c413bb7ff54126f">WHYNTER_BIT_MARK</link>   750</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1ga2e824e5b2ac1c06adafdbb203091ad2a">WHYNTER_ONE_SPACE</link>   2150</para>
</listitem>
            <listitem><para>#define <link linkend="_group___decoder_1gad81c68b306ebd739a90a2162e5afdba8">WHYNTER_ZERO_SPACE</link>   750</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_group___decoder_1ga90217576bd30a0755127207435731549">aggregateArrayCounts</link> (uint8_t aArray[], uint8_t aMaxIndex, uint8_t *aShortIndex, uint8_t *aLongIndex)</para>
</listitem>
            <listitem><para>static unsigned int <link linkend="_group___decoder_1ga01388575997ce2531098a606a8a25521">toFrequencyKHz</link> (uint16_t code)</para>
</listitem>
            <listitem><para>static uint16_t <link linkend="_group___decoder_1ga1272f3783a3b8d2cf2241f1e76674c8a">effectiveFrequency</link> (uint16_t frequency)</para>
</listitem>
            <listitem><para>static uint16_t <link linkend="_group___decoder_1ga356fabeed3a4b0a010a35550e86285c5">toTimebase</link> (uint16_t frequency)</para>
</listitem>
            <listitem><para>static uint16_t <link linkend="_group___decoder_1ga155ad672d0494903d7c89e73650879ae">toFrequencyCode</link> (uint16_t frequency)</para>
</listitem>
            <listitem><para>static char <link linkend="_group___decoder_1ga7741bc8892620b5da6c38a29d3d48668">hexDigit</link> (unsigned int x)</para>
</listitem>
            <listitem><para>static void <link linkend="_group___decoder_1gaa82a581fafa8fa2310b7241fe1ded33d">dumpDigit</link> (Print *aSerial, unsigned int number)</para>
</listitem>
            <listitem><para>static void <link linkend="_group___decoder_1ga69048be6384abbbe3c17e3f25432a392">dumpNumber</link> (Print *aSerial, uint16_t number)</para>
</listitem>
            <listitem><para>static void <link linkend="_group___decoder_1ga479fbb18cdfa303a8bc4322123f831df">dumpDuration</link> (Print *aSerial, uint32_t duration, uint16_t timebase)</para>
</listitem>
            <listitem><para>static void <link linkend="_group___decoder_1ga8a8a6b504851150df425d5b490d92640">compensateAndDumpSequence</link> (Print *aSerial, const volatile uint16_t *data, size_t length, uint16_t timebase)</para>
</listitem>
            <listitem><para>static bool <link linkend="_group___decoder_1gab3ca394ad13ba555852f3bb61d488c7b">dumpDigit</link> (String *aString, unsigned int number)</para>
</listitem>
            <listitem><para>static size_t <link linkend="_group___decoder_1gab49c8cfa7e96e3c5b54f9a41edbd33ba">dumpNumber</link> (String *aString, uint16_t number)</para>
</listitem>
            <listitem><para>static size_t <link linkend="_group___decoder_1ga536975baa9f5346484fc32bd48255d07">dumpDuration</link> (String *aString, uint32_t duration, uint16_t timebase)</para>
</listitem>
            <listitem><para>static size_t <link linkend="_group___decoder_1ga0772587b98a7fa0cf332788b7e2bd8e6">compensateAndDumpSequence</link> (String *aString, const volatile uint16_t *data, size_t length, uint16_t timebase)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1ga56bfe794dedefda7cc2487301fe1f1f3">IRsend::sendBoseWave</link> (uint8_t <link linkend="_class_i_rsend_1a5f5d819c72ce2f74395d14166e77c7cc">aCommand</link>, uint_fast8_t <link linkend="_class_i_rsend_1aff233b57d2382a713926797ce5da0fd3">aNumberOfRepeats</link>=<link linkend="__i_rremote_int_8h_1a5d35fb37031b53f0083f8b88ae3cf2c2">NO_REPEATS</link>)</para>
</listitem>
            <listitem><para>bool <link linkend="_group___decoder_1gaf9a5bf8248971aca9d4f5b68f3e9f858">IRrecv::decodeBoseWave</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1ga81b608682a7f7f89e0b1fd00756bb714">IRsend::sendSharp</link> (uint8_t aAddress, uint8_t <link linkend="_class_i_rsend_1a5f5d819c72ce2f74395d14166e77c7cc">aCommand</link>, uint_fast8_t <link linkend="_class_i_rsend_1aff233b57d2382a713926797ce5da0fd3">aNumberOfRepeats</link>)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1ga24eb15e28a8cbfa9a19e106ebd736731">IRsend::sendDenonRaw</link> (uint16_t aRawData, uint_fast8_t <link linkend="_class_i_rsend_1aff233b57d2382a713926797ce5da0fd3">aNumberOfRepeats</link>=0) <link linkend="_class_i_rsend_1a47ef75994f6381a6bfe8a715a6b8cdd5">__attribute__</link>((deprecated(&quot;Please use <link linkend="_group___decoder_1ga342baabd2418ed33d6d847ea5f53f165">sendDenon</link>(aAddress</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1ga342baabd2418ed33d6d847ea5f53f165">IRsend::sendDenon</link> (uint8_t aAddress, uint8_t <link linkend="_class_i_rsend_1a5f5d819c72ce2f74395d14166e77c7cc">aCommand</link>, uint_fast8_t <link linkend="_class_i_rsend_1aff233b57d2382a713926797ce5da0fd3">aNumberOfRepeats</link>, bool aSendSharp=false)</para>
</listitem>
            <listitem><para>bool <link linkend="_group___decoder_1ga7edfd9309ccd7f87762a17480635dcd6">IRrecv::decodeSharp</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_group___decoder_1ga680c0090daf6945a85fd2658af84dfac">IRrecv::decodeDenon</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_group___decoder_1ga5d11ba281c103fe66e0912c46276c26e">IRrecv::decodeDenonOld</link> (<link linkend="_structdecode__results">decode_results</link> *aResults)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1gab5a2c0a20071c7b37f0d1cd99680d513">IRsend::sendDenon</link> (unsigned long data, int nbits)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1ga0b0933040532b8c1cbc7cbf17ab7edb5">IRsend::sendSharp</link> (unsigned int address, unsigned int command)</para>
</listitem>
            <listitem><para>bool <link linkend="_group___decoder_1ga0d0267f8c89e3cffbecd103195b67f3c">IRrecv::decodeDistance</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1ga5b226cb8ff607ec666fbab236fcd1ec9">IRsend::sendJVC</link> (uint8_t aAddress, uint8_t <link linkend="_class_i_rsend_1a5f5d819c72ce2f74395d14166e77c7cc">aCommand</link>, uint_fast8_t <link linkend="_class_i_rsend_1aff233b57d2382a713926797ce5da0fd3">aNumberOfRepeats</link>)</para>
</listitem>
            <listitem><para>bool <link linkend="_group___decoder_1gad6ecf38f85cefea8f71090fce4dbbbed">IRrecv::decodeJVC</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_group___decoder_1gad7512fb183efc882f493ce5ab4c2bd10">IRrecv::decodeJVCMSB</link> (<link linkend="_structdecode__results">decode_results</link> *aResults)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1gae3ffaf23301bec85ca0c2c7499f484a3">IRsend::sendJVCMSB</link> (unsigned long data, int nbits, bool repeat=false)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1ga4b61477c5bd7a32ec7d005d7bb88c610">IRsend::sendKaseikyo</link> (uint16_t aAddress, uint8_t aData, uint_fast8_t <link linkend="_class_i_rsend_1aff233b57d2382a713926797ce5da0fd3">aNumberOfRepeats</link>, uint16_t aVendorCode)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1gad3a14e1a94a402a4cbe0eeeded312173">IRsend::sendPanasonic</link> (uint16_t aAddress, uint8_t aData, uint_fast8_t <link linkend="_class_i_rsend_1aff233b57d2382a713926797ce5da0fd3">aNumberOfRepeats</link>)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1ga9c3687ea0ab26ce088bd2a8a0aa1f1c8">IRsend::sendKaseikyo_Denon</link> (uint16_t aAddress, uint8_t aData, uint_fast8_t <link linkend="_class_i_rsend_1aff233b57d2382a713926797ce5da0fd3">aNumberOfRepeats</link>)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1gaf42f22f1d83211811b4ec765d4dc0a7f">IRsend::sendKaseikyo_Mitsubishi</link> (uint16_t aAddress, uint8_t aData, uint_fast8_t <link linkend="_class_i_rsend_1aff233b57d2382a713926797ce5da0fd3">aNumberOfRepeats</link>)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1ga6fee66f189ae46afac1ebe876ffbbf58">IRsend::sendKaseikyo_Sharp</link> (uint16_t aAddress, uint8_t aData, uint_fast8_t <link linkend="_class_i_rsend_1aff233b57d2382a713926797ce5da0fd3">aNumberOfRepeats</link>)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1ga43bf86aaaa216292f8eb7d0941731241">IRsend::sendKaseikyo_JVC</link> (uint16_t aAddress, uint8_t aData, uint_fast8_t <link linkend="_class_i_rsend_1aff233b57d2382a713926797ce5da0fd3">aNumberOfRepeats</link>)</para>
</listitem>
            <listitem><para>bool <link linkend="_group___decoder_1ga099d67ab5fef881af8838d6cb11d0b14">IRrecv::decodeKaseikyo</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_group___decoder_1ga5b0375df7166d1b6b1886891768a9379">IRrecv::decodePanasonicMSB</link> (<link linkend="_structdecode__results">decode_results</link> *aResults)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1ga205cb2e4005389ce19e769b25002b2a2">IRsend::sendPanasonic</link> (uint16_t aAddress, uint32_t aData) <link linkend="_class_i_rsend_1a47ef75994f6381a6bfe8a715a6b8cdd5">__attribute__</link>((deprecated(&quot;This old function sends MSB first! Please use sendPanasonic(aAddress</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1ga315bc3587e7c4aa15629155b66e52728">IRsend::sendLegoPowerFunctions</link> (uint16_t aRawData, bool aDoSend5Times=true)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1gaa62e64650aaae09b6f001a53a31f00b8">IRsend::sendLegoPowerFunctions</link> (uint8_t aChannel, uint8_t tCommand, uint8_t aMode, bool aDoSend5Times=true)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1gaea94765ecf1af29cf323354be4d74538">IRsend::sendLegoPowerFunctions</link> (uint16_t aRawData, uint8_t aChannel, bool aDoSend5Times=true)</para>
</listitem>
            <listitem><para>bool <link linkend="_group___decoder_1gae96d28d8682a352cb1118aae25d5bba5">IRrecv::decodeLegoPowerFunctions</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1ga59c09c7300fa34bc136b7be9bdebe2b5">IRsend::sendLGRepeat</link> (bool aUseLG2Protocol=false)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1gaf5095df5a6598fe2651510e4a8d5e018">IRsend::sendLG</link> (uint8_t aAddress, uint16_t <link linkend="_class_i_rsend_1a5f5d819c72ce2f74395d14166e77c7cc">aCommand</link>, uint_fast8_t <link linkend="_class_i_rsend_1aff233b57d2382a713926797ce5da0fd3">aNumberOfRepeats</link>, bool aIsRepeat=false, bool aUseLG2Protocol=false)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1ga9f8683daf286269b2aafab5e86a8bfc1">IRsend::sendLGRaw</link> (uint32_t aRawData, uint_fast8_t <link linkend="_class_i_rsend_1aff233b57d2382a713926797ce5da0fd3">aNumberOfRepeats</link>=0, bool aIsRepeat=false, bool aUseLG2Protocol=false)</para>
</listitem>
            <listitem><para>bool <link linkend="_group___decoder_1gac098ec62da77aa75ca9016d289f3d7aa">IRrecv::decodeLG</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_group___decoder_1ga1db023ba20fabb7190751b66445cc872">IRrecv::decodeLGMSB</link> (<link linkend="_structdecode__results">decode_results</link> *aResults)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1ga88ecc2eb801abf6aa1428cc0669abe94">IRsend::sendLG</link> (unsigned long data, int nbits)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1gae8fff4f1d8703ca18ea85a15289dc44c">IRsend::sendNECRepeat</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1gacc081690ddf61dec5d3f1c55000da7f5">IRsend::sendNEC</link> (uint16_t aAddress, uint8_t <link linkend="_class_i_rsend_1a5f5d819c72ce2f74395d14166e77c7cc">aCommand</link>, uint_fast8_t <link linkend="_class_i_rsend_1aff233b57d2382a713926797ce5da0fd3">aNumberOfRepeats</link>, bool aIsRepeat=false)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1ga857b05f2b99e8b705cb6d00470c4e78b">IRsend::sendOnkyo</link> (uint16_t aAddress, uint16_t <link linkend="_class_i_rsend_1a5f5d819c72ce2f74395d14166e77c7cc">aCommand</link>, uint_fast8_t <link linkend="_class_i_rsend_1aff233b57d2382a713926797ce5da0fd3">aNumberOfRepeats</link>, bool aIsRepeat=false)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1ga15fbc8a08b929395d6be6549cb296db5">IRsend::sendApple</link> (uint8_t aAddress, uint8_t <link linkend="_class_i_rsend_1a5f5d819c72ce2f74395d14166e77c7cc">aCommand</link>, uint_fast8_t <link linkend="_class_i_rsend_1aff233b57d2382a713926797ce5da0fd3">aNumberOfRepeats</link>, bool aIsRepeat=false)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1gaaeec0a3f8d592deee8746a5b06bc3454">IRsend::sendNECRaw</link> (uint32_t aRawData, uint_fast8_t <link linkend="_class_i_rsend_1aff233b57d2382a713926797ce5da0fd3">aNumberOfRepeats</link>=0, bool aIsRepeat=false)</para>
</listitem>
            <listitem><para>bool <link linkend="_group___decoder_1ga3f1a3a12862517a61341a92dfb0ea7f8">IRrecv::decodeNEC</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_group___decoder_1ga2b6633498c7e7b1ce64bb7f12a1ab4bd">IRrecv::decodeNECMSB</link> (<link linkend="_structdecode__results">decode_results</link> *aResults)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1ga0184d3edbfe2659b12fc157c3be0cd63">IRsend::sendNECMSB</link> (uint32_t data, uint8_t nbits, bool repeat=false)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1ga4f221f872371078dd6d4f3ffa87b7b10">IRsend::sendPronto</link> (const uint16_t *data, unsigned int length, uint_fast8_t <link linkend="_class_i_rsend_1aff233b57d2382a713926797ce5da0fd3">aNumberOfRepeats</link>=<link linkend="__i_rremote_int_8h_1a5d35fb37031b53f0083f8b88ae3cf2c2">NO_REPEATS</link>)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1ga5174f63b73d3ba9fe997bdb98a4af0c5">IRsend::sendPronto</link> (const char *prontoHexString, uint_fast8_t <link linkend="_class_i_rsend_1aff233b57d2382a713926797ce5da0fd3">aNumberOfRepeats</link>=<link linkend="__i_rremote_int_8h_1a5d35fb37031b53f0083f8b88ae3cf2c2">NO_REPEATS</link>)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1ga26830e1c38ef9caa1caedeb9e7dabb7a">IRsend::sendPronto</link> (const __FlashStringHelper *str, uint_fast8_t <link linkend="_class_i_rsend_1aff233b57d2382a713926797ce5da0fd3">aNumberOfRepeats</link>=<link linkend="__i_rremote_int_8h_1a5d35fb37031b53f0083f8b88ae3cf2c2">NO_REPEATS</link>)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1gaa701711c860c8ff58d332c4567e7ff89">IRrecv::compensateAndPrintIRResultAsPronto</link> (Print *aSerial, unsigned int frequency=38000U)</para>
</listitem>
            <listitem><para>size_t <link linkend="_group___decoder_1ga48195517ee0e2cd73788c7956e413014">IRrecv::compensateAndStorePronto</link> (String *aString, unsigned int frequency=38000U)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1ga55808fcce8aaf429ebbb1d34cb7f5ee5">IRsend::sendRC5</link> (uint8_t aAddress, uint8_t <link linkend="_class_i_rsend_1a5f5d819c72ce2f74395d14166e77c7cc">aCommand</link>, uint_fast8_t <link linkend="_class_i_rsend_1aff233b57d2382a713926797ce5da0fd3">aNumberOfRepeats</link>, bool aEnableAutomaticToggle=true)</para>
</listitem>
            <listitem><para>bool <link linkend="_group___decoder_1ga5720b53e427e0346ecc248e55c57e2b9">IRrecv::decodeRC5</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1gab2553414d8480f449762eb00a3ff7d6d">IRsend::sendRC6</link> (uint32_t data, uint8_t nbits)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1gae6bfe6af18c1bb7f34fda4338882b435">IRsend::sendRC6</link> (uint64_t data, uint8_t nbits)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1gad26a55d87f9f8cc64a77b4571ae79e5f">IRsend::sendRC6</link> (uint8_t aAddress, uint8_t <link linkend="_class_i_rsend_1a5f5d819c72ce2f74395d14166e77c7cc">aCommand</link>, uint_fast8_t <link linkend="_class_i_rsend_1aff233b57d2382a713926797ce5da0fd3">aNumberOfRepeats</link>, bool aEnableAutomaticToggle=true)</para>
</listitem>
            <listitem><para>bool <link linkend="_group___decoder_1gad98448418d525479e74c1a38725b498f">IRrecv::decodeRC6</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1ga6168e3ad4e47c657c9f3de0e5d7590b3">IRsend::sendRC5</link> (uint32_t data, uint8_t nbits)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1gaee1c9e1d8ab6dcf642d6707b4528385b">IRsend::sendRC5ext</link> (uint8_t addr, uint8_t cmd, bool toggle)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1ga4daa3f9a1c496072f2e17cdcf93f3906">IRsend::sendSamsungRepeat</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1ga5d194d783811b52669eb1c1ab17a3a0f">IRsend::sendSamsung</link> (uint16_t aAddress, uint16_t <link linkend="_class_i_rsend_1a5f5d819c72ce2f74395d14166e77c7cc">aCommand</link>, uint_fast8_t <link linkend="_class_i_rsend_1aff233b57d2382a713926797ce5da0fd3">aNumberOfRepeats</link>, bool aIsRepeat=false)</para>
</listitem>
            <listitem><para>bool <link linkend="_group___decoder_1ga06311ef402fe0a9cc85ad9defd35fdec">IRrecv::decodeSamsung</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_group___decoder_1ga6bdd668914f10932bc87bc57c4059ccd">IRrecv::decodeSAMSUNG</link> (<link linkend="_structdecode__results">decode_results</link> *aResults)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1ga7b4ca49d8fceaf6ccfa26df2d1b553d5">IRsend::sendSAMSUNG</link> (unsigned long data, int nbits)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1ga64cfeb90c005e597c62586ea19b93b12">IRsend::sendSony</link> (uint16_t aAddress, uint8_t <link linkend="_class_i_rsend_1a5f5d819c72ce2f74395d14166e77c7cc">aCommand</link>, uint_fast8_t <link linkend="_class_i_rsend_1aff233b57d2382a713926797ce5da0fd3">aNumberOfRepeats</link>, uint8_t numberOfBits=<link linkend="__i_r_protocol_8h_1a8a2dbf77031a92783a200b9902c8459b">SIRCS_12_PROTOCOL</link>)</para>
</listitem>
            <listitem><para>bool <link linkend="_group___decoder_1gaa4b87d095decf4ec8d9e4c445d6dfa27">IRrecv::decodeSony</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_group___decoder_1ga7ea1a0eb3b832974be8fd6c2cbde602f">IRrecv::decodeSonyMSB</link> (<link linkend="_structdecode__results">decode_results</link> *aResults)</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1ga8d1abfc5910cf3f0964498e8bf22bd4e">IRsend::sendSony</link> (unsigned long data, int nbits) <link linkend="_class_i_rsend_1a47ef75994f6381a6bfe8a715a6b8cdd5">__attribute__</link>((deprecated(&quot;This old function sends MSB first! Please use sendSony(aAddress</para>
</listitem>
            <listitem><para>void <link linkend="_group___decoder_1ga8acfdbfc54f8b76d49acb799f5b40805">IRsend::sendWhynter</link> (unsigned long data, int nbits)</para>
</listitem>
            <listitem><para>bool <link linkend="_group___decoder_1ga1de38e9831f29991f9be0e7a2583f142">IRrecv::decodeWhynter</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_group___decoder_1gaf9adc578f613a3d00e25f6a7fe1d371b">sLastSendToggleValue</link> = false</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
</section>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_group___decoder_1ga4d268b1bd7431cab88c570c446d4810b"/><section>
    <title>APPLE_ADDRESS</title>
<indexterm><primary>APPLE_ADDRESS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>APPLE_ADDRESS</secondary></indexterm>
<para><computeroutput>#define APPLE_ADDRESS   0x87EE</computeroutput></para><para>
Definition at line <link linkend="_ir___n_e_c_8hpp_source_1l00076">76</link> of file <link linkend="_ir___n_e_c_8hpp_source">ir_NEC.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga4a7b99be53662b1689675e92c5e8d640"/><section>
    <title>BOSEWAVE_BIT_MARK</title>
<indexterm><primary>BOSEWAVE_BIT_MARK</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>BOSEWAVE_BIT_MARK</secondary></indexterm>
<para><computeroutput>#define BOSEWAVE_BIT_MARK   534</computeroutput></para><para>
Definition at line <link linkend="_ir___bose_wave_8hpp_source_1l00040">40</link> of file <link linkend="_ir___bose_wave_8hpp_source">ir_BoseWave.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga97929dcf9c3088fe6b5ea9984179ee2a"/><section>
    <title>BOSEWAVE_BITS</title>
<indexterm><primary>BOSEWAVE_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>BOSEWAVE_BITS</secondary></indexterm>
<para><computeroutput>#define BOSEWAVE_BITS   16</computeroutput></para><para>
Definition at line <link linkend="_ir___bose_wave_8hpp_source_1l00036">36</link> of file <link linkend="_ir___bose_wave_8hpp_source">ir_BoseWave.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga01910d7deda73c7866abb73405e982d5"/><section>
    <title>BOSEWAVE_HEADER_MARK</title>
<indexterm><primary>BOSEWAVE_HEADER_MARK</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>BOSEWAVE_HEADER_MARK</secondary></indexterm>
<para><computeroutput>#define BOSEWAVE_HEADER_MARK   1060</computeroutput></para><para>
Definition at line <link linkend="_ir___bose_wave_8hpp_source_1l00038">38</link> of file <link linkend="_ir___bose_wave_8hpp_source">ir_BoseWave.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga1d790d85945d62aeac5b1324dcbc0654"/><section>
    <title>BOSEWAVE_HEADER_SPACE</title>
<indexterm><primary>BOSEWAVE_HEADER_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>BOSEWAVE_HEADER_SPACE</secondary></indexterm>
<para><computeroutput>#define BOSEWAVE_HEADER_SPACE   1450</computeroutput></para><para>
Definition at line <link linkend="_ir___bose_wave_8hpp_source_1l00039">39</link> of file <link linkend="_ir___bose_wave_8hpp_source">ir_BoseWave.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gac5abcecc1e901cf947864d70ef5fd685"/><section>
    <title>BOSEWAVE_ONE_SPACE</title>
<indexterm><primary>BOSEWAVE_ONE_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>BOSEWAVE_ONE_SPACE</secondary></indexterm>
<para><computeroutput>#define BOSEWAVE_ONE_SPACE   468</computeroutput></para><para>
Definition at line <link linkend="_ir___bose_wave_8hpp_source_1l00041">41</link> of file <link linkend="_ir___bose_wave_8hpp_source">ir_BoseWave.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gaaccf319744a0908453bf1e686a1eccf7"/><section>
    <title>BOSEWAVE_REPEAT_SPACE</title>
<indexterm><primary>BOSEWAVE_REPEAT_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>BOSEWAVE_REPEAT_SPACE</secondary></indexterm>
<para><computeroutput>#define BOSEWAVE_REPEAT_SPACE   52000</computeroutput></para><para>
Definition at line <link linkend="_ir___bose_wave_8hpp_source_1l00044">44</link> of file <link linkend="_ir___bose_wave_8hpp_source">ir_BoseWave.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga1a90821da64722ab8ddaefe4d084c4b9"/><section>
    <title>BOSEWAVE_ZERO_SPACE</title>
<indexterm><primary>BOSEWAVE_ZERO_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>BOSEWAVE_ZERO_SPACE</secondary></indexterm>
<para><computeroutput>#define BOSEWAVE_ZERO_SPACE   1447</computeroutput></para><para>
Definition at line <link linkend="_ir___bose_wave_8hpp_source_1l00042">42</link> of file <link linkend="_ir___bose_wave_8hpp_source">ir_BoseWave.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga0fa706b9b7b446be7508c1d42a287b87"/><section>
    <title>DENON_ADDRESS_BITS</title>
<indexterm><primary>DENON_ADDRESS_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>DENON_ADDRESS_BITS</secondary></indexterm>
<para><computeroutput>#define DENON_ADDRESS_BITS   5</computeroutput></para><para>
Definition at line <link linkend="_ir___denon_8hpp_source_1l00066">66</link> of file <link linkend="_ir___denon_8hpp_source">ir_Denon.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga2f1a46669381f4761b484d731a83997e"/><section>
    <title>DENON_AUTO_REPEAT_SPACE</title>
<indexterm><primary>DENON_AUTO_REPEAT_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>DENON_AUTO_REPEAT_SPACE</secondary></indexterm>
<para><computeroutput>#define DENON_AUTO_REPEAT_SPACE   45000</computeroutput></para><para>
Definition at line <link linkend="_ir___denon_8hpp_source_1l00077">77</link> of file <link linkend="_ir___denon_8hpp_source">ir_Denon.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gaa1e687145d4c8b75ae218193b16ecc8d"/><section>
    <title>DENON_BIT_MARK</title>
<indexterm><primary>DENON_BIT_MARK</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>DENON_BIT_MARK</secondary></indexterm>
<para><computeroutput>#define DENON_BIT_MARK   <link linkend="_group___decoder_1gad25dca3fd4ddc00b460b66007be0b2bb">DENON_UNIT</link></computeroutput></para><para>
Definition at line <link linkend="_ir___denon_8hpp_source_1l00073">73</link> of file <link linkend="_ir___denon_8hpp_source">ir_Denon.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gaf72e9c52e59ed81ef46bfd19a8b15613"/><section>
    <title>DENON_BITS</title>
<indexterm><primary>DENON_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>DENON_BITS</secondary></indexterm>
<para><computeroutput>#define DENON_BITS   (<link linkend="_group___decoder_1ga0fa706b9b7b446be7508c1d42a287b87">DENON_ADDRESS_BITS</link> + <link linkend="_group___decoder_1ga90391cc9021f25e3db08a4ecb6a3ce5b">DENON_COMMAND_BITS</link> + <link linkend="_group___decoder_1gac4d956744c670f42909797aa1a9f66d2">DENON_FRAME_BITS</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___denon_8hpp_source_1l00070">70</link> of file <link linkend="_ir___denon_8hpp_source">ir_Denon.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga90391cc9021f25e3db08a4ecb6a3ce5b"/><section>
    <title>DENON_COMMAND_BITS</title>
<indexterm><primary>DENON_COMMAND_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>DENON_COMMAND_BITS</secondary></indexterm>
<para><computeroutput>#define DENON_COMMAND_BITS   8</computeroutput></para><para>
Definition at line <link linkend="_ir___denon_8hpp_source_1l00067">67</link> of file <link linkend="_ir___denon_8hpp_source">ir_Denon.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gac4d956744c670f42909797aa1a9f66d2"/><section>
    <title>DENON_FRAME_BITS</title>
<indexterm><primary>DENON_FRAME_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>DENON_FRAME_BITS</secondary></indexterm>
<para><computeroutput>#define DENON_FRAME_BITS   2</computeroutput></para><para>
Definition at line <link linkend="_ir___denon_8hpp_source_1l00068">68</link> of file <link linkend="_ir___denon_8hpp_source">ir_Denon.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga6dc27eb34cfad41af16ceb70357898da"/><section>
    <title>DENON_HEADER_MARK</title>
<indexterm><primary>DENON_HEADER_MARK</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>DENON_HEADER_MARK</secondary></indexterm>
<para><computeroutput>#define DENON_HEADER_MARK   <link linkend="_group___decoder_1gad25dca3fd4ddc00b460b66007be0b2bb">DENON_UNIT</link></computeroutput></para><para>
Definition at line <link linkend="_ir___denon_8hpp_source_1l00081">81</link> of file <link linkend="_ir___denon_8hpp_source">ir_Denon.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gaba7b22de3732ce2d613f16730f2477d8"/><section>
    <title>DENON_HEADER_SPACE</title>
<indexterm><primary>DENON_HEADER_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>DENON_HEADER_SPACE</secondary></indexterm>
<para><computeroutput>#define DENON_HEADER_SPACE   (3 * <link linkend="_group___decoder_1gad25dca3fd4ddc00b460b66007be0b2bb">DENON_UNIT</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___denon_8hpp_source_1l00082">82</link> of file <link linkend="_ir___denon_8hpp_source">ir_Denon.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga8bf7f0f59510bb18534fc8766c9fe01e"/><section>
    <title>DENON_ONE_SPACE</title>
<indexterm><primary>DENON_ONE_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>DENON_ONE_SPACE</secondary></indexterm>
<para><computeroutput>#define DENON_ONE_SPACE   (7 * <link linkend="_group___decoder_1gad25dca3fd4ddc00b460b66007be0b2bb">DENON_UNIT</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___denon_8hpp_source_1l00074">74</link> of file <link linkend="_ir___denon_8hpp_source">ir_Denon.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gadf29400cf8e1622f6bc747dff0944861"/><section>
    <title>DENON_REPEAT_PERIOD</title>
<indexterm><primary>DENON_REPEAT_PERIOD</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>DENON_REPEAT_PERIOD</secondary></indexterm>
<para><computeroutput>#define DENON_REPEAT_PERIOD   110000</computeroutput></para><para>
Definition at line <link linkend="_ir___denon_8hpp_source_1l00078">78</link> of file <link linkend="_ir___denon_8hpp_source">ir_Denon.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gad25dca3fd4ddc00b460b66007be0b2bb"/><section>
    <title>DENON_UNIT</title>
<indexterm><primary>DENON_UNIT</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>DENON_UNIT</secondary></indexterm>
<para><computeroutput>#define DENON_UNIT   260</computeroutput></para><para>
Definition at line <link linkend="_ir___denon_8hpp_source_1l00071">71</link> of file <link linkend="_ir___denon_8hpp_source">ir_Denon.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga502f8eb1ebb964692c6593a580713064"/><section>
    <title>DENON_ZERO_SPACE</title>
<indexterm><primary>DENON_ZERO_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>DENON_ZERO_SPACE</secondary></indexterm>
<para><computeroutput>#define DENON_ZERO_SPACE   (3 * <link linkend="_group___decoder_1gad25dca3fd4ddc00b460b66007be0b2bb">DENON_UNIT</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___denon_8hpp_source_1l00075">75</link> of file <link linkend="_ir___denon_8hpp_source">ir_Denon.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gaede1737ff1f8da95a80c7aa059ba2f13"/><section>
    <title>JVC_ADDRESS_BITS</title>
<indexterm><primary>JVC_ADDRESS_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>JVC_ADDRESS_BITS</secondary></indexterm>
<para><computeroutput>#define JVC_ADDRESS_BITS   8</computeroutput></para><para>
Definition at line <link linkend="_ir___j_v_c_8hpp_source_1l00055">55</link> of file <link linkend="_ir___j_v_c_8hpp_source">ir_JVC.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga3eb74f5b177f68386ff35bd41e09a33c"/><section>
    <title>JVC_BIT_MARK</title>
<indexterm><primary>JVC_BIT_MARK</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>JVC_BIT_MARK</secondary></indexterm>
<para><computeroutput>#define JVC_BIT_MARK   <link linkend="_group___decoder_1gaa79a9fdad87400415aa367568b9fdb98">JVC_UNIT</link></computeroutput></para><para>
Definition at line <link linkend="_ir___j_v_c_8hpp_source_1l00064">64</link> of file <link linkend="_ir___j_v_c_8hpp_source">ir_JVC.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gafcb4f4e6144a1e3c779b2b8777b8f8ac"/><section>
    <title>JVC_BITS</title>
<indexterm><primary>JVC_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>JVC_BITS</secondary></indexterm>
<para><computeroutput>#define JVC_BITS   (<link linkend="_group___decoder_1gaede1737ff1f8da95a80c7aa059ba2f13">JVC_ADDRESS_BITS</link> + <link linkend="_group___decoder_1ga6c37ba21b2b04d86a7c5c028dd0edc9e">JVC_COMMAND_BITS</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___j_v_c_8hpp_source_1l00058">58</link> of file <link linkend="_ir___j_v_c_8hpp_source">ir_JVC.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga6c37ba21b2b04d86a7c5c028dd0edc9e"/><section>
    <title>JVC_COMMAND_BITS</title>
<indexterm><primary>JVC_COMMAND_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>JVC_COMMAND_BITS</secondary></indexterm>
<para><computeroutput>#define JVC_COMMAND_BITS   8</computeroutput></para><para>
Definition at line <link linkend="_ir___j_v_c_8hpp_source_1l00056">56</link> of file <link linkend="_ir___j_v_c_8hpp_source">ir_JVC.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gaec51a5a6206fbaae28a05966a840069d"/><section>
    <title>JVC_HEADER_MARK</title>
<indexterm><primary>JVC_HEADER_MARK</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>JVC_HEADER_MARK</secondary></indexterm>
<para><computeroutput>#define JVC_HEADER_MARK   (16 * <link linkend="_group___decoder_1gaa79a9fdad87400415aa367568b9fdb98">JVC_UNIT</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___j_v_c_8hpp_source_1l00061">61</link> of file <link linkend="_ir___j_v_c_8hpp_source">ir_JVC.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga44feb6af98dbbcf234ef970742b511a0"/><section>
    <title>JVC_HEADER_SPACE</title>
<indexterm><primary>JVC_HEADER_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>JVC_HEADER_SPACE</secondary></indexterm>
<para><computeroutput>#define JVC_HEADER_SPACE   (8 * <link linkend="_group___decoder_1gaa79a9fdad87400415aa367568b9fdb98">JVC_UNIT</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___j_v_c_8hpp_source_1l00062">62</link> of file <link linkend="_ir___j_v_c_8hpp_source">ir_JVC.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gac66f4778d06e0a5eda29695f4a0ad9fa"/><section>
    <title>JVC_ONE_SPACE</title>
<indexterm><primary>JVC_ONE_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>JVC_ONE_SPACE</secondary></indexterm>
<para><computeroutput>#define JVC_ONE_SPACE   (3 * <link linkend="_group___decoder_1gaa79a9fdad87400415aa367568b9fdb98">JVC_UNIT</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___j_v_c_8hpp_source_1l00065">65</link> of file <link linkend="_ir___j_v_c_8hpp_source">ir_JVC.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga1dcb7952853b00adb9a6869ce034b7f2"/><section>
    <title>JVC_REPEAT_SPACE</title>
<indexterm><primary>JVC_REPEAT_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>JVC_REPEAT_SPACE</secondary></indexterm>
<para><computeroutput>#define JVC_REPEAT_SPACE   (uint16_t)(45 * <link linkend="_group___decoder_1gaa79a9fdad87400415aa367568b9fdb98">JVC_UNIT</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___j_v_c_8hpp_source_1l00068">68</link> of file <link linkend="_ir___j_v_c_8hpp_source">ir_JVC.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gaa79a9fdad87400415aa367568b9fdb98"/><section>
    <title>JVC_UNIT</title>
<indexterm><primary>JVC_UNIT</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>JVC_UNIT</secondary></indexterm>
<para><computeroutput>#define JVC_UNIT   526</computeroutput></para><para>
Definition at line <link linkend="_ir___j_v_c_8hpp_source_1l00059">59</link> of file <link linkend="_ir___j_v_c_8hpp_source">ir_JVC.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga3e161d70fe56f2ed0f76b5421fd5b1b3"/><section>
    <title>JVC_ZERO_SPACE</title>
<indexterm><primary>JVC_ZERO_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>JVC_ZERO_SPACE</secondary></indexterm>
<para><computeroutput>#define JVC_ZERO_SPACE   <link linkend="_group___decoder_1gaa79a9fdad87400415aa367568b9fdb98">JVC_UNIT</link></computeroutput></para><para>
Definition at line <link linkend="_ir___j_v_c_8hpp_source_1l00066">66</link> of file <link linkend="_ir___j_v_c_8hpp_source">ir_JVC.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga2980cf86e2d6c0af8df3c7a29ff9468f"/><section>
    <title>KASEIKYO_ADDRESS_BITS</title>
<indexterm><primary>KASEIKYO_ADDRESS_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>KASEIKYO_ADDRESS_BITS</secondary></indexterm>
<para><computeroutput>#define KASEIKYO_ADDRESS_BITS   12</computeroutput></para><para>
Definition at line <link linkend="_ir___kaseikyo_8hpp_source_1l00065">65</link> of file <link linkend="_ir___kaseikyo_8hpp_source">ir_Kaseikyo.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga96b2393ae13bd45c6b13074a27e800eb"/><section>
    <title>KASEIKYO_AVERAGE_DURATION</title>
<indexterm><primary>KASEIKYO_AVERAGE_DURATION</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>KASEIKYO_AVERAGE_DURATION</secondary></indexterm>
<para><computeroutput>#define KASEIKYO_AVERAGE_DURATION   56000</computeroutput></para><para>
Definition at line <link linkend="_ir___kaseikyo_8hpp_source_1l00078">78</link> of file <link linkend="_ir___kaseikyo_8hpp_source">ir_Kaseikyo.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga69ea9935d680733cf8e37181e7df9184"/><section>
    <title>KASEIKYO_BIT_MARK</title>
<indexterm><primary>KASEIKYO_BIT_MARK</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>KASEIKYO_BIT_MARK</secondary></indexterm>
<para><computeroutput>#define KASEIKYO_BIT_MARK   <link linkend="_group___decoder_1ga902a330843509bcaff6a5f0bf4f38a9d">KASEIKYO_UNIT</link></computeroutput></para><para>
Definition at line <link linkend="_ir___kaseikyo_8hpp_source_1l00074">74</link> of file <link linkend="_ir___kaseikyo_8hpp_source">ir_Kaseikyo.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga592fb0e33827b607bb6c43072526575c"/><section>
    <title>KASEIKYO_BITS</title>
<indexterm><primary>KASEIKYO_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>KASEIKYO_BITS</secondary></indexterm>
<para><computeroutput>#define KASEIKYO_BITS   (<link linkend="_group___decoder_1gaa40dc0f36a788a2347dd601eb421fac9">KASEIKYO_VENDOR_ID_BITS</link> + <link linkend="_group___decoder_1ga00026f9a2bcd232d4cb191b9e9ce9fdb">KASEIKYO_VENDOR_ID_PARITY_BITS</link> + <link linkend="_group___decoder_1ga2980cf86e2d6c0af8df3c7a29ff9468f">KASEIKYO_ADDRESS_BITS</link> + <link linkend="_group___decoder_1ga46f7e707bf79a6b1657bd29bfaaa7522">KASEIKYO_COMMAND_BITS</link> + <link linkend="_group___decoder_1ga4d69f0966b844257d734539d4547ea80">KASEIKYO_PARITY_BITS</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___kaseikyo_8hpp_source_1l00068">68</link> of file <link linkend="_ir___kaseikyo_8hpp_source">ir_Kaseikyo.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga46f7e707bf79a6b1657bd29bfaaa7522"/><section>
    <title>KASEIKYO_COMMAND_BITS</title>
<indexterm><primary>KASEIKYO_COMMAND_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>KASEIKYO_COMMAND_BITS</secondary></indexterm>
<para><computeroutput>#define KASEIKYO_COMMAND_BITS   8</computeroutput></para><para>
Definition at line <link linkend="_ir___kaseikyo_8hpp_source_1l00066">66</link> of file <link linkend="_ir___kaseikyo_8hpp_source">ir_Kaseikyo.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gab8e6b6ef29172f2a9f2e3690fcdac4f3"/><section>
    <title>KASEIKYO_DATA_BITS</title>
<indexterm><primary>KASEIKYO_DATA_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>KASEIKYO_DATA_BITS</secondary></indexterm>
<para><computeroutput>#define KASEIKYO_DATA_BITS   32</computeroutput></para><para>
Definition at line <link linkend="_ir___kaseikyo_8hpp_source_1l00083">83</link> of file <link linkend="_ir___kaseikyo_8hpp_source">ir_Kaseikyo.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gaced5ece1bb2d810f20f6a02142181699"/><section>
    <title>KASEIKYO_HEADER_MARK</title>
<indexterm><primary>KASEIKYO_HEADER_MARK</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>KASEIKYO_HEADER_MARK</secondary></indexterm>
<para><computeroutput>#define KASEIKYO_HEADER_MARK   (8 * <link linkend="_group___decoder_1ga902a330843509bcaff6a5f0bf4f38a9d">KASEIKYO_UNIT</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___kaseikyo_8hpp_source_1l00071">71</link> of file <link linkend="_ir___kaseikyo_8hpp_source">ir_Kaseikyo.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga5bad2bab824504b4289cf034c8070b60"/><section>
    <title>KASEIKYO_HEADER_SPACE</title>
<indexterm><primary>KASEIKYO_HEADER_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>KASEIKYO_HEADER_SPACE</secondary></indexterm>
<para><computeroutput>#define KASEIKYO_HEADER_SPACE   (4 * <link linkend="_group___decoder_1ga902a330843509bcaff6a5f0bf4f38a9d">KASEIKYO_UNIT</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___kaseikyo_8hpp_source_1l00072">72</link> of file <link linkend="_ir___kaseikyo_8hpp_source">ir_Kaseikyo.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga70e2a773b7615e33846a98556ef5e43f"/><section>
    <title>KASEIKYO_ONE_SPACE</title>
<indexterm><primary>KASEIKYO_ONE_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>KASEIKYO_ONE_SPACE</secondary></indexterm>
<para><computeroutput>#define KASEIKYO_ONE_SPACE   (3 * <link linkend="_group___decoder_1ga902a330843509bcaff6a5f0bf4f38a9d">KASEIKYO_UNIT</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___kaseikyo_8hpp_source_1l00075">75</link> of file <link linkend="_ir___kaseikyo_8hpp_source">ir_Kaseikyo.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga4d69f0966b844257d734539d4547ea80"/><section>
    <title>KASEIKYO_PARITY_BITS</title>
<indexterm><primary>KASEIKYO_PARITY_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>KASEIKYO_PARITY_BITS</secondary></indexterm>
<para><computeroutput>#define KASEIKYO_PARITY_BITS   8</computeroutput></para><para>
Definition at line <link linkend="_ir___kaseikyo_8hpp_source_1l00067">67</link> of file <link linkend="_ir___kaseikyo_8hpp_source">ir_Kaseikyo.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gab8c7f8e151b67c06523fce7193dd5cdd"/><section>
    <title>KASEIKYO_REPEAT_PERIOD</title>
<indexterm><primary>KASEIKYO_REPEAT_PERIOD</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>KASEIKYO_REPEAT_PERIOD</secondary></indexterm>
<para><computeroutput>#define KASEIKYO_REPEAT_PERIOD   130000</computeroutput></para><para>
Definition at line <link linkend="_ir___kaseikyo_8hpp_source_1l00079">79</link> of file <link linkend="_ir___kaseikyo_8hpp_source">ir_Kaseikyo.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga33bd304970bafe120a91b03a08718ff9"/><section>
    <title>KASEIKYO_REPEAT_SPACE</title>
<indexterm><primary>KASEIKYO_REPEAT_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>KASEIKYO_REPEAT_SPACE</secondary></indexterm>
<para><computeroutput>#define KASEIKYO_REPEAT_SPACE   (<link linkend="_group___decoder_1gab8c7f8e151b67c06523fce7193dd5cdd">KASEIKYO_REPEAT_PERIOD</link> - <link linkend="_group___decoder_1ga96b2393ae13bd45c6b13074a27e800eb">KASEIKYO_AVERAGE_DURATION</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___kaseikyo_8hpp_source_1l00080">80</link> of file <link linkend="_ir___kaseikyo_8hpp_source">ir_Kaseikyo.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga902a330843509bcaff6a5f0bf4f38a9d"/><section>
    <title>KASEIKYO_UNIT</title>
<indexterm><primary>KASEIKYO_UNIT</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>KASEIKYO_UNIT</secondary></indexterm>
<para><computeroutput>#define KASEIKYO_UNIT   432</computeroutput></para><para>
Definition at line <link linkend="_ir___kaseikyo_8hpp_source_1l00069">69</link> of file <link linkend="_ir___kaseikyo_8hpp_source">ir_Kaseikyo.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gaa40dc0f36a788a2347dd601eb421fac9"/><section>
    <title>KASEIKYO_VENDOR_ID_BITS</title>
<indexterm><primary>KASEIKYO_VENDOR_ID_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>KASEIKYO_VENDOR_ID_BITS</secondary></indexterm>
<para><computeroutput>#define KASEIKYO_VENDOR_ID_BITS   16</computeroutput></para><para>
Definition at line <link linkend="_ir___kaseikyo_8hpp_source_1l00063">63</link> of file <link linkend="_ir___kaseikyo_8hpp_source">ir_Kaseikyo.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga00026f9a2bcd232d4cb191b9e9ce9fdb"/><section>
    <title>KASEIKYO_VENDOR_ID_PARITY_BITS</title>
<indexterm><primary>KASEIKYO_VENDOR_ID_PARITY_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>KASEIKYO_VENDOR_ID_PARITY_BITS</secondary></indexterm>
<para><computeroutput>#define KASEIKYO_VENDOR_ID_PARITY_BITS   4</computeroutput></para><para>
Definition at line <link linkend="_ir___kaseikyo_8hpp_source_1l00064">64</link> of file <link linkend="_ir___kaseikyo_8hpp_source">ir_Kaseikyo.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga11d27c9a23d42f44d941e0e9a678fcf5"/><section>
    <title>KASEIKYO_ZERO_SPACE</title>
<indexterm><primary>KASEIKYO_ZERO_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>KASEIKYO_ZERO_SPACE</secondary></indexterm>
<para><computeroutput>#define KASEIKYO_ZERO_SPACE   <link linkend="_group___decoder_1ga902a330843509bcaff6a5f0bf4f38a9d">KASEIKYO_UNIT</link></computeroutput></para><para>
Definition at line <link linkend="_ir___kaseikyo_8hpp_source_1l00076">76</link> of file <link linkend="_ir___kaseikyo_8hpp_source">ir_Kaseikyo.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gadb5b6035eb795ce7def85993415a8d38"/><section>
    <title>LEGO_AUTO_REPEAT_PERIOD_MAX</title>
<indexterm><primary>LEGO_AUTO_REPEAT_PERIOD_MAX</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>LEGO_AUTO_REPEAT_PERIOD_MAX</secondary></indexterm>
<para><computeroutput>#define LEGO_AUTO_REPEAT_PERIOD_MAX   230000</computeroutput></para><para>
Definition at line <link linkend="_ir___lego_8hpp_source_1l00087">87</link> of file <link linkend="_ir___lego_8hpp_source">ir_Lego.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga92da2b7d1208de09d496438a32e46ecf"/><section>
    <title>LEGO_AUTO_REPEAT_PERIOD_MIN</title>
<indexterm><primary>LEGO_AUTO_REPEAT_PERIOD_MIN</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>LEGO_AUTO_REPEAT_PERIOD_MIN</secondary></indexterm>
<para><computeroutput>#define LEGO_AUTO_REPEAT_PERIOD_MIN   110000</computeroutput></para><para>
Definition at line <link linkend="_ir___lego_8hpp_source_1l00086">86</link> of file <link linkend="_ir___lego_8hpp_source">ir_Lego.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gacffc86d1bdb9fa68d39408e230349be3"/><section>
    <title>LEGO_AVERAGE_DURATION</title>
<indexterm><primary>LEGO_AVERAGE_DURATION</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>LEGO_AVERAGE_DURATION</secondary></indexterm>
<para><computeroutput>#define LEGO_AVERAGE_DURATION   11000</computeroutput></para><para>
Definition at line <link linkend="_ir___lego_8hpp_source_1l00084">84</link> of file <link linkend="_ir___lego_8hpp_source">ir_Lego.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga38fc71b4c4cfb05d183d1656365755ab"/><section>
    <title>LEGO_BIT_MARK</title>
<indexterm><primary>LEGO_BIT_MARK</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>LEGO_BIT_MARK</secondary></indexterm>
<para><computeroutput>#define LEGO_BIT_MARK   158</computeroutput></para><para>
Definition at line <link linkend="_ir___lego_8hpp_source_1l00080">80</link> of file <link linkend="_ir___lego_8hpp_source">ir_Lego.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gaba11a8cdf603ec3a9f581e0316065ccd"/><section>
    <title>LEGO_BITS</title>
<indexterm><primary>LEGO_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>LEGO_BITS</secondary></indexterm>
<para><computeroutput>#define LEGO_BITS   (<link linkend="_group___decoder_1ga39a09b56f06d4ed10980f04da1cf7d3c">LEGO_CHANNEL_BITS</link> + <link linkend="_group___decoder_1ga22bc0b6a014c407189fbdda9de0d9460">LEGO_MODE_BITS</link> + <link linkend="_group___decoder_1ga24e8ec9c66fa683bbe0cf8e2bf9f464f">LEGO_COMMAND_BITS</link> + <link linkend="_group___decoder_1ga7da9e4d69027085b8a05c99dedd711c8">LEGO_PARITY_BITS</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___lego_8hpp_source_1l00075">75</link> of file <link linkend="_ir___lego_8hpp_source">ir_Lego.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga39a09b56f06d4ed10980f04da1cf7d3c"/><section>
    <title>LEGO_CHANNEL_BITS</title>
<indexterm><primary>LEGO_CHANNEL_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>LEGO_CHANNEL_BITS</secondary></indexterm>
<para><computeroutput>#define LEGO_CHANNEL_BITS   4</computeroutput></para><para>
Definition at line <link linkend="_ir___lego_8hpp_source_1l00070">70</link> of file <link linkend="_ir___lego_8hpp_source">ir_Lego.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga24e8ec9c66fa683bbe0cf8e2bf9f464f"/><section>
    <title>LEGO_COMMAND_BITS</title>
<indexterm><primary>LEGO_COMMAND_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>LEGO_COMMAND_BITS</secondary></indexterm>
<para><computeroutput>#define LEGO_COMMAND_BITS   4</computeroutput></para><para>
Definition at line <link linkend="_ir___lego_8hpp_source_1l00072">72</link> of file <link linkend="_ir___lego_8hpp_source">ir_Lego.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga413eee2968c317cddd592f169a0ae4d7"/><section>
    <title>LEGO_HEADER_MARK</title>
<indexterm><primary>LEGO_HEADER_MARK</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>LEGO_HEADER_MARK</secondary></indexterm>
<para><computeroutput>#define LEGO_HEADER_MARK   158</computeroutput></para><para>
Definition at line <link linkend="_ir___lego_8hpp_source_1l00077">77</link> of file <link linkend="_ir___lego_8hpp_source">ir_Lego.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga9f0dd70b25bfe364a5959c6531c1838c"/><section>
    <title>LEGO_HEADER_SPACE</title>
<indexterm><primary>LEGO_HEADER_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>LEGO_HEADER_SPACE</secondary></indexterm>
<para><computeroutput>#define LEGO_HEADER_SPACE   1026</computeroutput></para><para>
Definition at line <link linkend="_ir___lego_8hpp_source_1l00078">78</link> of file <link linkend="_ir___lego_8hpp_source">ir_Lego.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga22bc0b6a014c407189fbdda9de0d9460"/><section>
    <title>LEGO_MODE_BITS</title>
<indexterm><primary>LEGO_MODE_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>LEGO_MODE_BITS</secondary></indexterm>
<para><computeroutput>#define LEGO_MODE_BITS   4</computeroutput></para><para>
Definition at line <link linkend="_ir___lego_8hpp_source_1l00071">71</link> of file <link linkend="_ir___lego_8hpp_source">ir_Lego.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga8aefc728574d08153c73f21bdb4cb152"/><section>
    <title>LEGO_ONE_SPACE</title>
<indexterm><primary>LEGO_ONE_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>LEGO_ONE_SPACE</secondary></indexterm>
<para><computeroutput>#define LEGO_ONE_SPACE   553</computeroutput></para><para>
Definition at line <link linkend="_ir___lego_8hpp_source_1l00081">81</link> of file <link linkend="_ir___lego_8hpp_source">ir_Lego.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga7da9e4d69027085b8a05c99dedd711c8"/><section>
    <title>LEGO_PARITY_BITS</title>
<indexterm><primary>LEGO_PARITY_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>LEGO_PARITY_BITS</secondary></indexterm>
<para><computeroutput>#define LEGO_PARITY_BITS   4</computeroutput></para><para>
Definition at line <link linkend="_ir___lego_8hpp_source_1l00073">73</link> of file <link linkend="_ir___lego_8hpp_source">ir_Lego.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga8d06796444b99735c047301f52d5fcfc"/><section>
    <title>LEGO_ZERO_SPACE</title>
<indexterm><primary>LEGO_ZERO_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>LEGO_ZERO_SPACE</secondary></indexterm>
<para><computeroutput>#define LEGO_ZERO_SPACE   263</computeroutput></para><para>
Definition at line <link linkend="_ir___lego_8hpp_source_1l00082">82</link> of file <link linkend="_ir___lego_8hpp_source">ir_Lego.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga5867052dc3896b7ec94b9c24a4c89cc8"/><section>
    <title>LG2_HEADER_MARK</title>
<indexterm><primary>LG2_HEADER_MARK</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>LG2_HEADER_MARK</secondary></indexterm>
<para><computeroutput>#define LG2_HEADER_MARK   (6 * <link linkend="_group___decoder_1ga677656ae675af73405b65e0228ce6bc9">LG_UNIT</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___l_g_8hpp_source_1l00078">78</link> of file <link linkend="_ir___l_g_8hpp_source">ir_LG.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga6d0d031a5d287ef60e683a09b7bf05bc"/><section>
    <title>LG2_HEADER_SPACE</title>
<indexterm><primary>LG2_HEADER_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>LG2_HEADER_SPACE</secondary></indexterm>
<para><computeroutput>#define LG2_HEADER_SPACE   (19 * <link linkend="_group___decoder_1ga677656ae675af73405b65e0228ce6bc9">LG_UNIT</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___l_g_8hpp_source_1l00079">79</link> of file <link linkend="_ir___l_g_8hpp_source">ir_LG.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga195b3b0d3512e9321d7bacc052207852"/><section>
    <title>LG_ADDRESS_BITS</title>
<indexterm><primary>LG_ADDRESS_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>LG_ADDRESS_BITS</secondary></indexterm>
<para><computeroutput>#define LG_ADDRESS_BITS   8</computeroutput></para><para>
Definition at line <link linkend="_ir___l_g_8hpp_source_1l00068">68</link> of file <link linkend="_ir___l_g_8hpp_source">ir_LG.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gaba4191fd7407de304e799ce93d14ac93"/><section>
    <title>LG_AVERAGE_DURATION</title>
<indexterm><primary>LG_AVERAGE_DURATION</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>LG_AVERAGE_DURATION</secondary></indexterm>
<para><computeroutput>#define LG_AVERAGE_DURATION   58000</computeroutput></para><para>
Definition at line <link linkend="_ir___l_g_8hpp_source_1l00086">86</link> of file <link linkend="_ir___l_g_8hpp_source">ir_LG.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gacb12362c8e9ab1034036c4efc20d57f5"/><section>
    <title>LG_BIT_MARK</title>
<indexterm><primary>LG_BIT_MARK</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>LG_BIT_MARK</secondary></indexterm>
<para><computeroutput>#define LG_BIT_MARK   <link linkend="_group___decoder_1ga677656ae675af73405b65e0228ce6bc9">LG_UNIT</link></computeroutput></para><para>
Definition at line <link linkend="_ir___l_g_8hpp_source_1l00081">81</link> of file <link linkend="_ir___l_g_8hpp_source">ir_LG.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gacaf693c322cb866cec3eafecfbe35b66"/><section>
    <title>LG_BITS</title>
<indexterm><primary>LG_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>LG_BITS</secondary></indexterm>
<para><computeroutput>#define LG_BITS   (<link linkend="_group___decoder_1ga195b3b0d3512e9321d7bacc052207852">LG_ADDRESS_BITS</link> + <link linkend="_group___decoder_1gadf67f00c097160de2557c969ad6248a8">LG_COMMAND_BITS</link> + <link linkend="_group___decoder_1ga0d92dd1cd56a7f82b6281796042b94b5">LG_CHECKSUM_BITS</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___l_g_8hpp_source_1l00071">71</link> of file <link linkend="_ir___l_g_8hpp_source">ir_LG.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga0d92dd1cd56a7f82b6281796042b94b5"/><section>
    <title>LG_CHECKSUM_BITS</title>
<indexterm><primary>LG_CHECKSUM_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>LG_CHECKSUM_BITS</secondary></indexterm>
<para><computeroutput>#define LG_CHECKSUM_BITS   4</computeroutput></para><para>
Definition at line <link linkend="_ir___l_g_8hpp_source_1l00070">70</link> of file <link linkend="_ir___l_g_8hpp_source">ir_LG.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gadf67f00c097160de2557c969ad6248a8"/><section>
    <title>LG_COMMAND_BITS</title>
<indexterm><primary>LG_COMMAND_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>LG_COMMAND_BITS</secondary></indexterm>
<para><computeroutput>#define LG_COMMAND_BITS   16</computeroutput></para><para>
Definition at line <link linkend="_ir___l_g_8hpp_source_1l00069">69</link> of file <link linkend="_ir___l_g_8hpp_source">ir_LG.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gae9e8390ffc6850202815112c8493a0f6"/><section>
    <title>LG_HEADER_MARK</title>
<indexterm><primary>LG_HEADER_MARK</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>LG_HEADER_MARK</secondary></indexterm>
<para><computeroutput>#define LG_HEADER_MARK   (18 * <link linkend="_group___decoder_1ga677656ae675af73405b65e0228ce6bc9">LG_UNIT</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___l_g_8hpp_source_1l00075">75</link> of file <link linkend="_ir___l_g_8hpp_source">ir_LG.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga5eccb52c8ef993ad228c6968953c583c"/><section>
    <title>LG_HEADER_SPACE</title>
<indexterm><primary>LG_HEADER_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>LG_HEADER_SPACE</secondary></indexterm>
<para><computeroutput>#define LG_HEADER_SPACE   4200</computeroutput></para><para>
Definition at line <link linkend="_ir___l_g_8hpp_source_1l00076">76</link> of file <link linkend="_ir___l_g_8hpp_source">ir_LG.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga5b41314206902e7eec1c396b3999eab9"/><section>
    <title>LG_ONE_SPACE</title>
<indexterm><primary>LG_ONE_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>LG_ONE_SPACE</secondary></indexterm>
<para><computeroutput>#define LG_ONE_SPACE   1580</computeroutput></para><para>
Definition at line <link linkend="_ir___l_g_8hpp_source_1l00082">82</link> of file <link linkend="_ir___l_g_8hpp_source">ir_LG.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga4d1e6191572c1154992f1d566556f6a2"/><section>
    <title>LG_REPEAT_DURATION</title>
<indexterm><primary>LG_REPEAT_DURATION</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>LG_REPEAT_DURATION</secondary></indexterm>
<para><computeroutput>#define LG_REPEAT_DURATION   (<link linkend="_group___decoder_1gae9e8390ffc6850202815112c8493a0f6">LG_HEADER_MARK</link>  + <link linkend="_group___decoder_1ga98bc79faab54e6927516f308a0a07cb5">LG_REPEAT_HEADER_SPACE</link> + <link linkend="_group___decoder_1gacb12362c8e9ab1034036c4efc20d57f5">LG_BIT_MARK</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___l_g_8hpp_source_1l00087">87</link> of file <link linkend="_ir___l_g_8hpp_source">ir_LG.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga98bc79faab54e6927516f308a0a07cb5"/><section>
    <title>LG_REPEAT_HEADER_SPACE</title>
<indexterm><primary>LG_REPEAT_HEADER_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>LG_REPEAT_HEADER_SPACE</secondary></indexterm>
<para><computeroutput>#define LG_REPEAT_HEADER_SPACE   (4 * <link linkend="_group___decoder_1ga677656ae675af73405b65e0228ce6bc9">LG_UNIT</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___l_g_8hpp_source_1l00085">85</link> of file <link linkend="_ir___l_g_8hpp_source">ir_LG.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gaa478740acb2cb7dd0737a791b90b33fc"/><section>
    <title>LG_REPEAT_PERIOD</title>
<indexterm><primary>LG_REPEAT_PERIOD</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>LG_REPEAT_PERIOD</secondary></indexterm>
<para><computeroutput>#define LG_REPEAT_PERIOD   110000</computeroutput></para><para>
Definition at line <link linkend="_ir___l_g_8hpp_source_1l00088">88</link> of file <link linkend="_ir___l_g_8hpp_source">ir_LG.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga95abf0b48968f9aa3ce0582282cb53c8"/><section>
    <title>LG_REPEAT_SPACE</title>
<indexterm><primary>LG_REPEAT_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>LG_REPEAT_SPACE</secondary></indexterm>
<para><computeroutput>#define LG_REPEAT_SPACE   (<link linkend="_group___decoder_1gaa478740acb2cb7dd0737a791b90b33fc">LG_REPEAT_PERIOD</link> - <link linkend="_group___decoder_1gaba4191fd7407de304e799ce93d14ac93">LG_AVERAGE_DURATION</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___l_g_8hpp_source_1l00089">89</link> of file <link linkend="_ir___l_g_8hpp_source">ir_LG.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga677656ae675af73405b65e0228ce6bc9"/><section>
    <title>LG_UNIT</title>
<indexterm><primary>LG_UNIT</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>LG_UNIT</secondary></indexterm>
<para><computeroutput>#define LG_UNIT   500</computeroutput></para><para>
Definition at line <link linkend="_ir___l_g_8hpp_source_1l00073">73</link> of file <link linkend="_ir___l_g_8hpp_source">ir_LG.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga8f7c839827bd908025687a175453f50a"/><section>
    <title>LG_ZERO_SPACE</title>
<indexterm><primary>LG_ZERO_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>LG_ZERO_SPACE</secondary></indexterm>
<para><computeroutput>#define LG_ZERO_SPACE   550</computeroutput></para><para>
Definition at line <link linkend="_ir___l_g_8hpp_source_1l00083">83</link> of file <link linkend="_ir___l_g_8hpp_source">ir_LG.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gaace57f5ebe7ac2d2f80a496702065627"/><section>
    <title>MIN_RC5_MARKS</title>
<indexterm><primary>MIN_RC5_MARKS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>MIN_RC5_MARKS</secondary></indexterm>
<para><computeroutput>#define MIN_RC5_MARKS   ((<link linkend="_group___decoder_1gabc94db01a9d2e2f8caccaa32ec2ffa8a">RC5_BITS</link> + 1) / 2)</computeroutput></para><para>
Definition at line <link linkend="_ir___r_c5___r_c6_8hpp_source_1l00070">70</link> of file <link linkend="_ir___r_c5___r_c6_8hpp_source">ir_RC5_RC6.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga9d1c512ada596652f29f24b17ef7f900"/><section>
    <title>MIN_RC6_MARKS</title>
<indexterm><primary>MIN_RC6_MARKS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>MIN_RC6_MARKS</secondary></indexterm>
<para><computeroutput>#define MIN_RC6_MARKS   4 + ((<link linkend="_group___decoder_1ga998e578fa80abf8e58794f162b4e9c4f">RC6_ADDRESS_BITS</link> + <link linkend="_group___decoder_1ga2693e6912aaa2615f31b2c8298e84e83">RC6_COMMAND_BITS</link>) / 2)</computeroutput></para><para>
Definition at line <link linkend="_ir___r_c5___r_c6_8hpp_source_1l00237">237</link> of file <link linkend="_ir___r_c5___r_c6_8hpp_source">ir_RC5_RC6.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga864aa6044417289d715eb819c1be3e10"/><section>
    <title>MIN_RC6_SAMPLES</title>
<indexterm><primary>MIN_RC6_SAMPLES</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>MIN_RC6_SAMPLES</secondary></indexterm>
<para><computeroutput>#define MIN_RC6_SAMPLES   1</computeroutput></para><para>
Definition at line <link linkend="_ir___r_c5___r_c6_8hpp_source_1l00219">219</link> of file <link linkend="_ir___r_c5___r_c6_8hpp_source">ir_RC5_RC6.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga2ab110e480a4b16fe516c2afd16a1ea2"/><section>
    <title>NEC_ADDRESS_BITS</title>
<indexterm><primary>NEC_ADDRESS_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>NEC_ADDRESS_BITS</secondary></indexterm>
<para><computeroutput>#define NEC_ADDRESS_BITS   16</computeroutput></para><para>
Definition at line <link linkend="_ir___n_e_c_8hpp_source_1l00056">56</link> of file <link linkend="_ir___n_e_c_8hpp_source">ir_NEC.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gad086d93e5fb59de2890e12653a9c2f4f"/><section>
    <title>NEC_AVERAGE_DURATION</title>
<indexterm><primary>NEC_AVERAGE_DURATION</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>NEC_AVERAGE_DURATION</secondary></indexterm>
<para><computeroutput>#define NEC_AVERAGE_DURATION   62000</computeroutput></para><para>
Definition at line <link linkend="_ir___n_e_c_8hpp_source_1l00071">71</link> of file <link linkend="_ir___n_e_c_8hpp_source">ir_NEC.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga3abbe30ef3781c1cf2490003e1c1443a"/><section>
    <title>NEC_BIT_MARK</title>
<indexterm><primary>NEC_BIT_MARK</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>NEC_BIT_MARK</secondary></indexterm>
<para><computeroutput>#define NEC_BIT_MARK   <link linkend="_group___tiny_receiver_1gaf3317b0cf5cf7d3063addbaa0a256158">NEC_UNIT</link></computeroutput></para><para>
Definition at line <link linkend="_ir___n_e_c_8hpp_source_1l00065">65</link> of file <link linkend="_ir___n_e_c_8hpp_source">ir_NEC.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gaa82c77bc0131ac28bc3534b8cf3422bc"/><section>
    <title>NEC_BITS</title>
<indexterm><primary>NEC_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>NEC_BITS</secondary></indexterm>
<para><computeroutput>#define NEC_BITS   (<link linkend="_group___tiny_receiver_1ga2ab110e480a4b16fe516c2afd16a1ea2">NEC_ADDRESS_BITS</link> + <link linkend="_group___tiny_receiver_1ga07e295da53565eb7146072bdfeb2ed32">NEC_COMMAND_BITS</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___n_e_c_8hpp_source_1l00059">59</link> of file <link linkend="_ir___n_e_c_8hpp_source">ir_NEC.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga07e295da53565eb7146072bdfeb2ed32"/><section>
    <title>NEC_COMMAND_BITS</title>
<indexterm><primary>NEC_COMMAND_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>NEC_COMMAND_BITS</secondary></indexterm>
<para><computeroutput>#define NEC_COMMAND_BITS   16</computeroutput></para><para>
Definition at line <link linkend="_ir___n_e_c_8hpp_source_1l00057">57</link> of file <link linkend="_ir___n_e_c_8hpp_source">ir_NEC.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga8d393b95d8df4dfa15873aec6a37965e"/><section>
    <title>NEC_HEADER_MARK</title>
<indexterm><primary>NEC_HEADER_MARK</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>NEC_HEADER_MARK</secondary></indexterm>
<para><computeroutput>#define NEC_HEADER_MARK   (16 * <link linkend="_group___tiny_receiver_1gaf3317b0cf5cf7d3063addbaa0a256158">NEC_UNIT</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___n_e_c_8hpp_source_1l00062">62</link> of file <link linkend="_ir___n_e_c_8hpp_source">ir_NEC.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga5c728ed320ffee624e26767be0a80404"/><section>
    <title>NEC_HEADER_SPACE</title>
<indexterm><primary>NEC_HEADER_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>NEC_HEADER_SPACE</secondary></indexterm>
<para><computeroutput>#define NEC_HEADER_SPACE   (8 * <link linkend="_group___tiny_receiver_1gaf3317b0cf5cf7d3063addbaa0a256158">NEC_UNIT</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___n_e_c_8hpp_source_1l00063">63</link> of file <link linkend="_ir___n_e_c_8hpp_source">ir_NEC.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga5ac04ec8b2185c9fb257d39c472733b1"/><section>
    <title>NEC_ONE_SPACE</title>
<indexterm><primary>NEC_ONE_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>NEC_ONE_SPACE</secondary></indexterm>
<para><computeroutput>#define NEC_ONE_SPACE   (3 * <link linkend="_group___tiny_receiver_1gaf3317b0cf5cf7d3063addbaa0a256158">NEC_UNIT</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___n_e_c_8hpp_source_1l00066">66</link> of file <link linkend="_ir___n_e_c_8hpp_source">ir_NEC.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga0e78e019c888522fce3d5a4d4104753d"/><section>
    <title>NEC_REPEAT_DURATION</title>
<indexterm><primary>NEC_REPEAT_DURATION</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>NEC_REPEAT_DURATION</secondary></indexterm>
<para><computeroutput>#define NEC_REPEAT_DURATION   (<link linkend="_group___tiny_receiver_1ga8d393b95d8df4dfa15873aec6a37965e">NEC_HEADER_MARK</link>  + <link linkend="_group___tiny_receiver_1ga91880ffa0b09391f2c827d3a1c565abf">NEC_REPEAT_HEADER_SPACE</link> + <link linkend="_group___tiny_receiver_1ga3abbe30ef3781c1cf2490003e1c1443a">NEC_BIT_MARK</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___n_e_c_8hpp_source_1l00072">72</link> of file <link linkend="_ir___n_e_c_8hpp_source">ir_NEC.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga91880ffa0b09391f2c827d3a1c565abf"/><section>
    <title>NEC_REPEAT_HEADER_SPACE</title>
<indexterm><primary>NEC_REPEAT_HEADER_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>NEC_REPEAT_HEADER_SPACE</secondary></indexterm>
<para><computeroutput>#define NEC_REPEAT_HEADER_SPACE   (4 * <link linkend="_group___tiny_receiver_1gaf3317b0cf5cf7d3063addbaa0a256158">NEC_UNIT</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___n_e_c_8hpp_source_1l00069">69</link> of file <link linkend="_ir___n_e_c_8hpp_source">ir_NEC.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gac2dab5c4a22f8c4915217d3ee4676f08"/><section>
    <title>NEC_REPEAT_PERIOD</title>
<indexterm><primary>NEC_REPEAT_PERIOD</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>NEC_REPEAT_PERIOD</secondary></indexterm>
<para><computeroutput>#define NEC_REPEAT_PERIOD   110000</computeroutput></para><para>
Definition at line <link linkend="_ir___n_e_c_8hpp_source_1l00073">73</link> of file <link linkend="_ir___n_e_c_8hpp_source">ir_NEC.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gad075e7ecc3052e071d1c9076137c2b35"/><section>
    <title>NEC_REPEAT_SPACE</title>
<indexterm><primary>NEC_REPEAT_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>NEC_REPEAT_SPACE</secondary></indexterm>
<para><computeroutput>#define NEC_REPEAT_SPACE   (<link linkend="_group___tiny_receiver_1gac2dab5c4a22f8c4915217d3ee4676f08">NEC_REPEAT_PERIOD</link> - <link linkend="_group___decoder_1gad086d93e5fb59de2890e12653a9c2f4f">NEC_AVERAGE_DURATION</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___n_e_c_8hpp_source_1l00074">74</link> of file <link linkend="_ir___n_e_c_8hpp_source">ir_NEC.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gaf3317b0cf5cf7d3063addbaa0a256158"/><section>
    <title>NEC_UNIT</title>
<indexterm><primary>NEC_UNIT</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>NEC_UNIT</secondary></indexterm>
<para><computeroutput>#define NEC_UNIT   560</computeroutput></para><para>
Definition at line <link linkend="_ir___n_e_c_8hpp_source_1l00060">60</link> of file <link linkend="_ir___n_e_c_8hpp_source">ir_NEC.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga5ee46914e98bf7f87f32a7104843b243"/><section>
    <title>NEC_ZERO_SPACE</title>
<indexterm><primary>NEC_ZERO_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>NEC_ZERO_SPACE</secondary></indexterm>
<para><computeroutput>#define NEC_ZERO_SPACE   <link linkend="_group___tiny_receiver_1gaf3317b0cf5cf7d3063addbaa0a256158">NEC_UNIT</link></computeroutput></para><para>
Definition at line <link linkend="_ir___n_e_c_8hpp_source_1l00067">67</link> of file <link linkend="_ir___n_e_c_8hpp_source">ir_NEC.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga6a67feee58533e6520c703ce2f21c74d"/><section>
    <title>RC5_ADDRESS_BITS</title>
<indexterm><primary>RC5_ADDRESS_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>RC5_ADDRESS_BITS</secondary></indexterm>
<para><computeroutput>#define RC5_ADDRESS_BITS   5</computeroutput></para><para>
Definition at line <link linkend="_ir___r_c5___r_c6_8hpp_source_1l00061">61</link> of file <link linkend="_ir___r_c5___r_c6_8hpp_source">ir_RC5_RC6.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gabc94db01a9d2e2f8caccaa32ec2ffa8a"/><section>
    <title>RC5_BITS</title>
<indexterm><primary>RC5_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>RC5_BITS</secondary></indexterm>
<para><computeroutput>#define RC5_BITS   (<link linkend="_group___decoder_1ga736ff0f98dd2db7eb6998fd0d99f4764">RC5_COMMAND_FIELD_BIT</link> + <link linkend="_group___decoder_1ga5b54edc58ba3827fa05eb934f570f27d">RC5_TOGGLE_BIT</link> + <link linkend="_group___decoder_1ga6a67feee58533e6520c703ce2f21c74d">RC5_ADDRESS_BITS</link> + <link linkend="_group___decoder_1gad486165e9022f3ee3a36c2d6c0068901">RC5_COMMAND_BITS</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___r_c5___r_c6_8hpp_source_1l00066">66</link> of file <link linkend="_ir___r_c5___r_c6_8hpp_source">ir_RC5_RC6.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gad486165e9022f3ee3a36c2d6c0068901"/><section>
    <title>RC5_COMMAND_BITS</title>
<indexterm><primary>RC5_COMMAND_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>RC5_COMMAND_BITS</secondary></indexterm>
<para><computeroutput>#define RC5_COMMAND_BITS   6</computeroutput></para><para>
Definition at line <link linkend="_ir___r_c5___r_c6_8hpp_source_1l00062">62</link> of file <link linkend="_ir___r_c5___r_c6_8hpp_source">ir_RC5_RC6.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga736ff0f98dd2db7eb6998fd0d99f4764"/><section>
    <title>RC5_COMMAND_FIELD_BIT</title>
<indexterm><primary>RC5_COMMAND_FIELD_BIT</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>RC5_COMMAND_FIELD_BIT</secondary></indexterm>
<para><computeroutput>#define RC5_COMMAND_FIELD_BIT   1</computeroutput></para><para>
Definition at line <link linkend="_ir___r_c5___r_c6_8hpp_source_1l00063">63</link> of file <link linkend="_ir___r_c5___r_c6_8hpp_source">ir_RC5_RC6.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga72ef3521775a056c2009b22cc9a50a28"/><section>
    <title>RC5_DURATION</title>
<indexterm><primary>RC5_DURATION</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>RC5_DURATION</secondary></indexterm>
<para><computeroutput>#define RC5_DURATION   (15L * <link linkend="_group___decoder_1ga29c2e67aa7b0ee1ed87b0e154eaf6f69">RC5_UNIT</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___r_c5___r_c6_8hpp_source_1l00072">72</link> of file <link linkend="_ir___r_c5___r_c6_8hpp_source">ir_RC5_RC6.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga985b139053cd231f47e363981e6a32e4"/><section>
    <title>RC5_REPEAT_PERIOD</title>
<indexterm><primary>RC5_REPEAT_PERIOD</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>RC5_REPEAT_PERIOD</secondary></indexterm>
<para><computeroutput>#define RC5_REPEAT_PERIOD   (128L * <link linkend="_group___decoder_1ga29c2e67aa7b0ee1ed87b0e154eaf6f69">RC5_UNIT</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___r_c5___r_c6_8hpp_source_1l00073">73</link> of file <link linkend="_ir___r_c5___r_c6_8hpp_source">ir_RC5_RC6.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga97029fbe8be39f78c835bf30040a743b"/><section>
    <title>RC5_REPEAT_SPACE</title>
<indexterm><primary>RC5_REPEAT_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>RC5_REPEAT_SPACE</secondary></indexterm>
<para><computeroutput>#define RC5_REPEAT_SPACE   (<link linkend="_group___decoder_1ga985b139053cd231f47e363981e6a32e4">RC5_REPEAT_PERIOD</link> - <link linkend="_group___decoder_1ga72ef3521775a056c2009b22cc9a50a28">RC5_DURATION</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___r_c5___r_c6_8hpp_source_1l00074">74</link> of file <link linkend="_ir___r_c5___r_c6_8hpp_source">ir_RC5_RC6.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga5b54edc58ba3827fa05eb934f570f27d"/><section>
    <title>RC5_TOGGLE_BIT</title>
<indexterm><primary>RC5_TOGGLE_BIT</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>RC5_TOGGLE_BIT</secondary></indexterm>
<para><computeroutput>#define RC5_TOGGLE_BIT   1</computeroutput></para><para>
Definition at line <link linkend="_ir___r_c5___r_c6_8hpp_source_1l00064">64</link> of file <link linkend="_ir___r_c5___r_c6_8hpp_source">ir_RC5_RC6.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga29c2e67aa7b0ee1ed87b0e154eaf6f69"/><section>
    <title>RC5_UNIT</title>
<indexterm><primary>RC5_UNIT</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>RC5_UNIT</secondary></indexterm>
<para><computeroutput>#define RC5_UNIT   889</computeroutput></para><para>
Definition at line <link linkend="_ir___r_c5___r_c6_8hpp_source_1l00068">68</link> of file <link linkend="_ir___r_c5___r_c6_8hpp_source">ir_RC5_RC6.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga998e578fa80abf8e58794f162b4e9c4f"/><section>
    <title>RC6_ADDRESS_BITS</title>
<indexterm><primary>RC6_ADDRESS_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>RC6_ADDRESS_BITS</secondary></indexterm>
<para><computeroutput>#define RC6_ADDRESS_BITS   8</computeroutput></para><para>
Definition at line <link linkend="_ir___r_c5___r_c6_8hpp_source_1l00226">226</link> of file <link linkend="_ir___r_c5___r_c6_8hpp_source">ir_RC5_RC6.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gaf0ebba4bfe3db1f49f593ac87ecc78ea"/><section>
    <title>RC6_BITS</title>
<indexterm><primary>RC6_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>RC6_BITS</secondary></indexterm>
<para><computeroutput>#define RC6_BITS   (<link linkend="_group___decoder_1gabe308752857e0c9d2aa632459efff68b">RC6_LEADING_BIT</link> + <link linkend="_group___decoder_1gace06a80186f826baaec50247cccd9fa6">RC6_MODE_BITS</link> + <link linkend="_group___decoder_1ga2899c3ab9e20e006a196f1e959e496f7">RC6_TOGGLE_BIT</link> + <link linkend="_group___decoder_1ga998e578fa80abf8e58794f162b4e9c4f">RC6_ADDRESS_BITS</link> + <link linkend="_group___decoder_1ga2693e6912aaa2615f31b2c8298e84e83">RC6_COMMAND_BITS</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___r_c5___r_c6_8hpp_source_1l00229">229</link> of file <link linkend="_ir___r_c5___r_c6_8hpp_source">ir_RC5_RC6.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga2693e6912aaa2615f31b2c8298e84e83"/><section>
    <title>RC6_COMMAND_BITS</title>
<indexterm><primary>RC6_COMMAND_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>RC6_COMMAND_BITS</secondary></indexterm>
<para><computeroutput>#define RC6_COMMAND_BITS   8</computeroutput></para><para>
Definition at line <link linkend="_ir___r_c5___r_c6_8hpp_source_1l00227">227</link> of file <link linkend="_ir___r_c5___r_c6_8hpp_source">ir_RC5_RC6.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga89c0498dae46351ae778a263bd1c90c9"/><section>
    <title>RC6_HEADER_MARK</title>
<indexterm><primary>RC6_HEADER_MARK</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>RC6_HEADER_MARK</secondary></indexterm>
<para><computeroutput>#define RC6_HEADER_MARK   (6 * <link linkend="_group___decoder_1ga0c8422e20817bc71f9b16f013d282800">RC6_UNIT</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___r_c5___r_c6_8hpp_source_1l00233">233</link> of file <link linkend="_ir___r_c5___r_c6_8hpp_source">ir_RC5_RC6.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga5c7e98f561ee9ffea33dbe1f5c6d124a"/><section>
    <title>RC6_HEADER_SPACE</title>
<indexterm><primary>RC6_HEADER_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>RC6_HEADER_SPACE</secondary></indexterm>
<para><computeroutput>#define RC6_HEADER_SPACE   (2 * <link linkend="_group___decoder_1ga0c8422e20817bc71f9b16f013d282800">RC6_UNIT</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___r_c5___r_c6_8hpp_source_1l00234">234</link> of file <link linkend="_ir___r_c5___r_c6_8hpp_source">ir_RC5_RC6.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gabe308752857e0c9d2aa632459efff68b"/><section>
    <title>RC6_LEADING_BIT</title>
<indexterm><primary>RC6_LEADING_BIT</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>RC6_LEADING_BIT</secondary></indexterm>
<para><computeroutput>#define RC6_LEADING_BIT   1</computeroutput></para><para>
Definition at line <link linkend="_ir___r_c5___r_c6_8hpp_source_1l00223">223</link> of file <link linkend="_ir___r_c5___r_c6_8hpp_source">ir_RC5_RC6.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gace06a80186f826baaec50247cccd9fa6"/><section>
    <title>RC6_MODE_BITS</title>
<indexterm><primary>RC6_MODE_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>RC6_MODE_BITS</secondary></indexterm>
<para><computeroutput>#define RC6_MODE_BITS   3</computeroutput></para><para>
Definition at line <link linkend="_ir___r_c5___r_c6_8hpp_source_1l00224">224</link> of file <link linkend="_ir___r_c5___r_c6_8hpp_source">ir_RC5_RC6.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga359feaa5ff007c309d1bce3debe3f579"/><section>
    <title>RC6_REPEAT_SPACE</title>
<indexterm><primary>RC6_REPEAT_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>RC6_REPEAT_SPACE</secondary></indexterm>
<para><computeroutput>#define RC6_REPEAT_SPACE   107000</computeroutput></para><para>
Definition at line <link linkend="_ir___r_c5___r_c6_8hpp_source_1l00239">239</link> of file <link linkend="_ir___r_c5___r_c6_8hpp_source">ir_RC5_RC6.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gab20744e40f55c70de7fd11c163643d03"/><section>
    <title>RC6_RPT_LENGTH</title>
<indexterm><primary>RC6_RPT_LENGTH</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>RC6_RPT_LENGTH</secondary></indexterm>
<para><computeroutput>#define RC6_RPT_LENGTH   46000</computeroutput></para><para>
Definition at line <link linkend="_ir___r_c5___r_c6_8hpp_source_1l00221">221</link> of file <link linkend="_ir___r_c5___r_c6_8hpp_source">ir_RC5_RC6.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga2899c3ab9e20e006a196f1e959e496f7"/><section>
    <title>RC6_TOGGLE_BIT</title>
<indexterm><primary>RC6_TOGGLE_BIT</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>RC6_TOGGLE_BIT</secondary></indexterm>
<para><computeroutput>#define RC6_TOGGLE_BIT   1</computeroutput></para><para>
Definition at line <link linkend="_ir___r_c5___r_c6_8hpp_source_1l00225">225</link> of file <link linkend="_ir___r_c5___r_c6_8hpp_source">ir_RC5_RC6.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga80d136268d4d727245922ae0c85464c3"/><section>
    <title>RC6_TRAILING_SPACE</title>
<indexterm><primary>RC6_TRAILING_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>RC6_TRAILING_SPACE</secondary></indexterm>
<para><computeroutput>#define RC6_TRAILING_SPACE   (6 * <link linkend="_group___decoder_1ga0c8422e20817bc71f9b16f013d282800">RC6_UNIT</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___r_c5___r_c6_8hpp_source_1l00236">236</link> of file <link linkend="_ir___r_c5___r_c6_8hpp_source">ir_RC5_RC6.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga0c8422e20817bc71f9b16f013d282800"/><section>
    <title>RC6_UNIT</title>
<indexterm><primary>RC6_UNIT</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>RC6_UNIT</secondary></indexterm>
<para><computeroutput>#define RC6_UNIT   444</computeroutput></para><para>
Definition at line <link linkend="_ir___r_c5___r_c6_8hpp_source_1l00231">231</link> of file <link linkend="_ir___r_c5___r_c6_8hpp_source">ir_RC5_RC6.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gac442c5511ca3736cafc683e2507db6b4"/><section>
    <title>SAMSUNG48_BITS</title>
<indexterm><primary>SAMSUNG48_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>SAMSUNG48_BITS</secondary></indexterm>
<para><computeroutput>#define SAMSUNG48_BITS   (<link linkend="_group___decoder_1ga283d6e91f30293b52d3b0d7aeb11c2cb">SAMSUNG_ADDRESS_BITS</link> + <link linkend="_group___decoder_1gab7035588b69b6a1c30dd496a1e8351c0">SAMSUNG_COMMAND32_BITS</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___samsung_8hpp_source_1l00060">60</link> of file <link linkend="_ir___samsung_8hpp_source">ir_Samsung.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga283d6e91f30293b52d3b0d7aeb11c2cb"/><section>
    <title>SAMSUNG_ADDRESS_BITS</title>
<indexterm><primary>SAMSUNG_ADDRESS_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>SAMSUNG_ADDRESS_BITS</secondary></indexterm>
<para><computeroutput>#define SAMSUNG_ADDRESS_BITS   16</computeroutput></para><para>
Definition at line <link linkend="_ir___samsung_8hpp_source_1l00056">56</link> of file <link linkend="_ir___samsung_8hpp_source">ir_Samsung.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gad3410f25a216ddb5a2a975d3aa33fdcd"/><section>
    <title>SAMSUNG_AVERAGE_DURATION</title>
<indexterm><primary>SAMSUNG_AVERAGE_DURATION</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>SAMSUNG_AVERAGE_DURATION</secondary></indexterm>
<para><computeroutput>#define SAMSUNG_AVERAGE_DURATION   55000</computeroutput></para><para>
Definition at line <link linkend="_ir___samsung_8hpp_source_1l00069">69</link> of file <link linkend="_ir___samsung_8hpp_source">ir_Samsung.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga838b0e3727e67fd3b986d2f3b77ffb7c"/><section>
    <title>SAMSUNG_BIT_MARK</title>
<indexterm><primary>SAMSUNG_BIT_MARK</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>SAMSUNG_BIT_MARK</secondary></indexterm>
<para><computeroutput>#define SAMSUNG_BIT_MARK   <link linkend="_group___decoder_1ga651bd895c4ad553171399aebcc7297ea">SAMSUNG_UNIT</link></computeroutput></para><para>
Definition at line <link linkend="_ir___samsung_8hpp_source_1l00065">65</link> of file <link linkend="_ir___samsung_8hpp_source">ir_Samsung.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gafc27510b737f1ce90042bee6ef245592"/><section>
    <title>SAMSUNG_BITS</title>
<indexterm><primary>SAMSUNG_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>SAMSUNG_BITS</secondary></indexterm>
<para><computeroutput>#define SAMSUNG_BITS   (<link linkend="_group___decoder_1ga283d6e91f30293b52d3b0d7aeb11c2cb">SAMSUNG_ADDRESS_BITS</link> + <link linkend="_group___decoder_1ga12d540662f0eaef3297b2fee1be653b9">SAMSUNG_COMMAND16_BITS</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___samsung_8hpp_source_1l00059">59</link> of file <link linkend="_ir___samsung_8hpp_source">ir_Samsung.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga12d540662f0eaef3297b2fee1be653b9"/><section>
    <title>SAMSUNG_COMMAND16_BITS</title>
<indexterm><primary>SAMSUNG_COMMAND16_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>SAMSUNG_COMMAND16_BITS</secondary></indexterm>
<para><computeroutput>#define SAMSUNG_COMMAND16_BITS   16</computeroutput></para><para>
Definition at line <link linkend="_ir___samsung_8hpp_source_1l00057">57</link> of file <link linkend="_ir___samsung_8hpp_source">ir_Samsung.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gab7035588b69b6a1c30dd496a1e8351c0"/><section>
    <title>SAMSUNG_COMMAND32_BITS</title>
<indexterm><primary>SAMSUNG_COMMAND32_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>SAMSUNG_COMMAND32_BITS</secondary></indexterm>
<para><computeroutput>#define SAMSUNG_COMMAND32_BITS   32</computeroutput></para><para>
Definition at line <link linkend="_ir___samsung_8hpp_source_1l00058">58</link> of file <link linkend="_ir___samsung_8hpp_source">ir_Samsung.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gaba5b0346e4a7aca7a202768a6abf7cae"/><section>
    <title>SAMSUNG_HEADER_MARK</title>
<indexterm><primary>SAMSUNG_HEADER_MARK</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>SAMSUNG_HEADER_MARK</secondary></indexterm>
<para><computeroutput>#define SAMSUNG_HEADER_MARK   (8 * <link linkend="_group___decoder_1ga651bd895c4ad553171399aebcc7297ea">SAMSUNG_UNIT</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___samsung_8hpp_source_1l00063">63</link> of file <link linkend="_ir___samsung_8hpp_source">ir_Samsung.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga22d50c9e05c2de32c73cda0a9b05a8c4"/><section>
    <title>SAMSUNG_HEADER_SPACE</title>
<indexterm><primary>SAMSUNG_HEADER_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>SAMSUNG_HEADER_SPACE</secondary></indexterm>
<para><computeroutput>#define SAMSUNG_HEADER_SPACE   (8 * <link linkend="_group___decoder_1ga651bd895c4ad553171399aebcc7297ea">SAMSUNG_UNIT</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___samsung_8hpp_source_1l00064">64</link> of file <link linkend="_ir___samsung_8hpp_source">ir_Samsung.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga139bb990e482496d098c49c6409047bf"/><section>
    <title>SAMSUNG_ONE_SPACE</title>
<indexterm><primary>SAMSUNG_ONE_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>SAMSUNG_ONE_SPACE</secondary></indexterm>
<para><computeroutput>#define SAMSUNG_ONE_SPACE   (3 * <link linkend="_group___decoder_1ga651bd895c4ad553171399aebcc7297ea">SAMSUNG_UNIT</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___samsung_8hpp_source_1l00066">66</link> of file <link linkend="_ir___samsung_8hpp_source">ir_Samsung.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga2d02df520e7d312e045090f6f1e62897"/><section>
    <title>SAMSUNG_REPEAT_DURATION</title>
<indexterm><primary>SAMSUNG_REPEAT_DURATION</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>SAMSUNG_REPEAT_DURATION</secondary></indexterm>
<para><computeroutput>#define SAMSUNG_REPEAT_DURATION   (<link linkend="_group___decoder_1gaba5b0346e4a7aca7a202768a6abf7cae">SAMSUNG_HEADER_MARK</link>  + <link linkend="_group___decoder_1ga22d50c9e05c2de32c73cda0a9b05a8c4">SAMSUNG_HEADER_SPACE</link> + <link linkend="_group___decoder_1ga838b0e3727e67fd3b986d2f3b77ffb7c">SAMSUNG_BIT_MARK</link> + <link linkend="_group___decoder_1ga47aa3d1eeb1f86ee48a8c9a9e2c1e4d2">SAMSUNG_ZERO_SPACE</link> + <link linkend="_group___decoder_1ga838b0e3727e67fd3b986d2f3b77ffb7c">SAMSUNG_BIT_MARK</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___samsung_8hpp_source_1l00070">70</link> of file <link linkend="_ir___samsung_8hpp_source">ir_Samsung.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga7611f37500fda881b03220c8a7fd9d74"/><section>
    <title>SAMSUNG_REPEAT_PERIOD</title>
<indexterm><primary>SAMSUNG_REPEAT_PERIOD</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>SAMSUNG_REPEAT_PERIOD</secondary></indexterm>
<para><computeroutput>#define SAMSUNG_REPEAT_PERIOD   110000</computeroutput></para><para>
Definition at line <link linkend="_ir___samsung_8hpp_source_1l00071">71</link> of file <link linkend="_ir___samsung_8hpp_source">ir_Samsung.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga651bd895c4ad553171399aebcc7297ea"/><section>
    <title>SAMSUNG_UNIT</title>
<indexterm><primary>SAMSUNG_UNIT</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>SAMSUNG_UNIT</secondary></indexterm>
<para><computeroutput>#define SAMSUNG_UNIT   553</computeroutput></para><para>
Definition at line <link linkend="_ir___samsung_8hpp_source_1l00062">62</link> of file <link linkend="_ir___samsung_8hpp_source">ir_Samsung.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga47aa3d1eeb1f86ee48a8c9a9e2c1e4d2"/><section>
    <title>SAMSUNG_ZERO_SPACE</title>
<indexterm><primary>SAMSUNG_ZERO_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>SAMSUNG_ZERO_SPACE</secondary></indexterm>
<para><computeroutput>#define SAMSUNG_ZERO_SPACE   <link linkend="_group___decoder_1ga651bd895c4ad553171399aebcc7297ea">SAMSUNG_UNIT</link></computeroutput></para><para>
Definition at line <link linkend="_ir___samsung_8hpp_source_1l00067">67</link> of file <link linkend="_ir___samsung_8hpp_source">ir_Samsung.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga8bf3de6a0e95b5fcdee222bb59170be3"/><section>
    <title>SONY_ADDRESS_BITS</title>
<indexterm><primary>SONY_ADDRESS_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>SONY_ADDRESS_BITS</secondary></indexterm>
<para><computeroutput>#define SONY_ADDRESS_BITS   5</computeroutput></para><para>
Definition at line <link linkend="_ir___sony_8hpp_source_1l00052">52</link> of file <link linkend="_ir___sony_8hpp_source">ir_Sony.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gaa2fa5f3ee92363009f82407872c42549"/><section>
    <title>SONY_AVERAGE_DURATION</title>
<indexterm><primary>SONY_AVERAGE_DURATION</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>SONY_AVERAGE_DURATION</secondary></indexterm>
<para><computeroutput>#define SONY_AVERAGE_DURATION   21000</computeroutput></para><para>
Definition at line <link linkend="_ir___sony_8hpp_source_1l00065">65</link> of file <link linkend="_ir___sony_8hpp_source">ir_Sony.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gaf3244e66cd80474af035911fbbe6d46d"/><section>
    <title>SONY_BITS_15</title>
<indexterm><primary>SONY_BITS_15</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>SONY_BITS_15</secondary></indexterm>
<para><computeroutput>#define SONY_BITS_15   (<link linkend="_group___decoder_1ga41b47908d312a62738b47d02f5996bd7">SONY_COMMAND_BITS</link> + <link linkend="_group___decoder_1ga8bf3de6a0e95b5fcdee222bb59170be3">SONY_ADDRESS_BITS</link> + 3)</computeroutput></para><para>
Definition at line <link linkend="_ir___sony_8hpp_source_1l00056">56</link> of file <link linkend="_ir___sony_8hpp_source">ir_Sony.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga0122c3deff0aa5a81ccb9cc675d87e57"/><section>
    <title>SONY_BITS_MAX</title>
<indexterm><primary>SONY_BITS_MAX</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>SONY_BITS_MAX</secondary></indexterm>
<para><computeroutput>#define SONY_BITS_MAX   (<link linkend="_group___decoder_1ga41b47908d312a62738b47d02f5996bd7">SONY_COMMAND_BITS</link> + <link linkend="_group___decoder_1ga8bf3de6a0e95b5fcdee222bb59170be3">SONY_ADDRESS_BITS</link> + <link linkend="_group___decoder_1ga706923dfa59320924f91e826c170789f">SONY_EXTRA_BITS</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___sony_8hpp_source_1l00057">57</link> of file <link linkend="_ir___sony_8hpp_source">ir_Sony.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga081ed9a7e2b2ee39c9ca9198f655160e"/><section>
    <title>SONY_BITS_MIN</title>
<indexterm><primary>SONY_BITS_MIN</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>SONY_BITS_MIN</secondary></indexterm>
<para><computeroutput>#define SONY_BITS_MIN   (<link linkend="_group___decoder_1ga41b47908d312a62738b47d02f5996bd7">SONY_COMMAND_BITS</link> + <link linkend="_group___decoder_1ga8bf3de6a0e95b5fcdee222bb59170be3">SONY_ADDRESS_BITS</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___sony_8hpp_source_1l00055">55</link> of file <link linkend="_ir___sony_8hpp_source">ir_Sony.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga41b47908d312a62738b47d02f5996bd7"/><section>
    <title>SONY_COMMAND_BITS</title>
<indexterm><primary>SONY_COMMAND_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>SONY_COMMAND_BITS</secondary></indexterm>
<para><computeroutput>#define SONY_COMMAND_BITS   7</computeroutput></para><para>
Definition at line <link linkend="_ir___sony_8hpp_source_1l00053">53</link> of file <link linkend="_ir___sony_8hpp_source">ir_Sony.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gae8967821a9dae0e890bdb9d95a3ee6c0"/><section>
    <title>SONY_DOUBLE_SPACE_USECS</title>
<indexterm><primary>SONY_DOUBLE_SPACE_USECS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>SONY_DOUBLE_SPACE_USECS</secondary></indexterm>
<para><computeroutput>#define SONY_DOUBLE_SPACE_USECS   500</computeroutput></para><para>
Definition at line <link linkend="_ir___sony_8hpp_source_1l00152">152</link> of file <link linkend="_ir___sony_8hpp_source">ir_Sony.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga706923dfa59320924f91e826c170789f"/><section>
    <title>SONY_EXTRA_BITS</title>
<indexterm><primary>SONY_EXTRA_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>SONY_EXTRA_BITS</secondary></indexterm>
<para><computeroutput>#define SONY_EXTRA_BITS   8</computeroutput></para><para>
Definition at line <link linkend="_ir___sony_8hpp_source_1l00054">54</link> of file <link linkend="_ir___sony_8hpp_source">ir_Sony.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gaa9e51d168691efecbc72d9ab08ebe167"/><section>
    <title>SONY_HEADER_MARK</title>
<indexterm><primary>SONY_HEADER_MARK</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>SONY_HEADER_MARK</secondary></indexterm>
<para><computeroutput>#define SONY_HEADER_MARK   (4 * <link linkend="_group___decoder_1ga441cf836ba5e41a476cfaed754619e7d">SONY_UNIT</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___sony_8hpp_source_1l00060">60</link> of file <link linkend="_ir___sony_8hpp_source">ir_Sony.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gaaa7d595e4d4b3857f3165bbc7682ae36"/><section>
    <title>SONY_ONE_MARK</title>
<indexterm><primary>SONY_ONE_MARK</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>SONY_ONE_MARK</secondary></indexterm>
<para><computeroutput>#define SONY_ONE_MARK   (2 * <link linkend="_group___decoder_1ga441cf836ba5e41a476cfaed754619e7d">SONY_UNIT</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___sony_8hpp_source_1l00061">61</link> of file <link linkend="_ir___sony_8hpp_source">ir_Sony.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga04bbfe2a8ffe2d8909f20223dc7ae573"/><section>
    <title>SONY_REPEAT_PERIOD</title>
<indexterm><primary>SONY_REPEAT_PERIOD</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>SONY_REPEAT_PERIOD</secondary></indexterm>
<para><computeroutput>#define SONY_REPEAT_PERIOD   45000</computeroutput></para><para>
Definition at line <link linkend="_ir___sony_8hpp_source_1l00066">66</link> of file <link linkend="_ir___sony_8hpp_source">ir_Sony.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga99ad5f89aa2e68db38c3ee54d925673e"/><section>
    <title>SONY_REPEAT_SPACE</title>
<indexterm><primary>SONY_REPEAT_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>SONY_REPEAT_SPACE</secondary></indexterm>
<para><computeroutput>#define SONY_REPEAT_SPACE   (<link linkend="_group___decoder_1ga04bbfe2a8ffe2d8909f20223dc7ae573">SONY_REPEAT_PERIOD</link> - <link linkend="_group___decoder_1gaa2fa5f3ee92363009f82407872c42549">SONY_AVERAGE_DURATION</link>)</computeroutput></para><para>
Definition at line <link linkend="_ir___sony_8hpp_source_1l00067">67</link> of file <link linkend="_ir___sony_8hpp_source">ir_Sony.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga6bed381432686c9434b0debbda4936d0"/><section>
    <title>SONY_SPACE</title>
<indexterm><primary>SONY_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>SONY_SPACE</secondary></indexterm>
<para><computeroutput>#define SONY_SPACE   <link linkend="_group___decoder_1ga441cf836ba5e41a476cfaed754619e7d">SONY_UNIT</link></computeroutput></para><para>
Definition at line <link linkend="_ir___sony_8hpp_source_1l00063">63</link> of file <link linkend="_ir___sony_8hpp_source">ir_Sony.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga441cf836ba5e41a476cfaed754619e7d"/><section>
    <title>SONY_UNIT</title>
<indexterm><primary>SONY_UNIT</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>SONY_UNIT</secondary></indexterm>
<para><computeroutput>#define SONY_UNIT   600</computeroutput></para><para>
Definition at line <link linkend="_ir___sony_8hpp_source_1l00058">58</link> of file <link linkend="_ir___sony_8hpp_source">ir_Sony.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gaacafe83ae7609e591a845d188477b4e6"/><section>
    <title>SONY_ZERO_MARK</title>
<indexterm><primary>SONY_ZERO_MARK</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>SONY_ZERO_MARK</secondary></indexterm>
<para><computeroutput>#define SONY_ZERO_MARK   <link linkend="_group___decoder_1ga441cf836ba5e41a476cfaed754619e7d">SONY_UNIT</link></computeroutput></para><para>
Definition at line <link linkend="_ir___sony_8hpp_source_1l00062">62</link> of file <link linkend="_ir___sony_8hpp_source">ir_Sony.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga7cd99216d53c9b798c413bb7ff54126f"/><section>
    <title>WHYNTER_BIT_MARK</title>
<indexterm><primary>WHYNTER_BIT_MARK</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>WHYNTER_BIT_MARK</secondary></indexterm>
<para><computeroutput>#define WHYNTER_BIT_MARK   750</computeroutput></para><para>
Definition at line <link linkend="_ir___whynter_8hpp_source_1l00025">25</link> of file <link linkend="_ir___whynter_8hpp_source">ir_Whynter.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga1c501f7c080c2cf8f5593ca1fb2f0b24"/><section>
    <title>WHYNTER_BITS</title>
<indexterm><primary>WHYNTER_BITS</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>WHYNTER_BITS</secondary></indexterm>
<para><computeroutput>#define WHYNTER_BITS   32</computeroutput></para><para>
Definition at line <link linkend="_ir___whynter_8hpp_source_1l00022">22</link> of file <link linkend="_ir___whynter_8hpp_source">ir_Whynter.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga27674e95707b010ac4b064524006f80e"/><section>
    <title>WHYNTER_HEADER_MARK</title>
<indexterm><primary>WHYNTER_HEADER_MARK</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>WHYNTER_HEADER_MARK</secondary></indexterm>
<para><computeroutput>#define WHYNTER_HEADER_MARK   2850</computeroutput></para><para>
Definition at line <link linkend="_ir___whynter_8hpp_source_1l00023">23</link> of file <link linkend="_ir___whynter_8hpp_source">ir_Whynter.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga516861bba8fb7df36adfcef25f2ae493"/><section>
    <title>WHYNTER_HEADER_SPACE</title>
<indexterm><primary>WHYNTER_HEADER_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>WHYNTER_HEADER_SPACE</secondary></indexterm>
<para><computeroutput>#define WHYNTER_HEADER_SPACE   2850</computeroutput></para><para>
Definition at line <link linkend="_ir___whynter_8hpp_source_1l00024">24</link> of file <link linkend="_ir___whynter_8hpp_source">ir_Whynter.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1ga2e824e5b2ac1c06adafdbb203091ad2a"/><section>
    <title>WHYNTER_ONE_SPACE</title>
<indexterm><primary>WHYNTER_ONE_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>WHYNTER_ONE_SPACE</secondary></indexterm>
<para><computeroutput>#define WHYNTER_ONE_SPACE   2150</computeroutput></para><para>
Definition at line <link linkend="_ir___whynter_8hpp_source_1l00026">26</link> of file <link linkend="_ir___whynter_8hpp_source">ir_Whynter.hpp</link>.</para>
</section>
<anchor xml:id="_group___decoder_1gad81c68b306ebd739a90a2162e5afdba8"/><section>
    <title>WHYNTER_ZERO_SPACE</title>
<indexterm><primary>WHYNTER_ZERO_SPACE</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>WHYNTER_ZERO_SPACE</secondary></indexterm>
<para><computeroutput>#define WHYNTER_ZERO_SPACE   750</computeroutput></para><para>
Definition at line <link linkend="_ir___whynter_8hpp_source_1l00027">27</link> of file <link linkend="_ir___whynter_8hpp_source">ir_Whynter.hpp</link>.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_group___decoder_1ga90217576bd30a0755127207435731549"/><section>
    <title>aggregateArrayCounts()</title>
<indexterm><primary>aggregateArrayCounts</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>aggregateArrayCounts</secondary></indexterm>
<para><computeroutput>bool aggregateArrayCounts (uint8_t aArray[], uint8_t aMaxIndex, uint8_t * aShortIndex, uint8_t * aLongIndex)</computeroutput></para><para>
Definition at line <link linkend="_ir___distance_protocol_8hpp_source_1l00082">82</link> of file <link linkend="_ir___distance_protocol_8hpp_source">ir_DistanceProtocol.hpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga90217576bd30a0755127207435731549_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga8a8a6b504851150df425d5b490d92640"/><section>
    <title>compensateAndDumpSequence()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>compensateAndDumpSequence</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>compensateAndDumpSequence</secondary></indexterm>
<para><computeroutput>static void compensateAndDumpSequence (Print * aSerial, const volatile uint16_t * data, size_t length, uint16_t timebase)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_ir___pronto_8hpp_source_1l00237">237</link> of file <link linkend="_ir___pronto_8hpp_source">ir_Pronto.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga8a8a6b504851150df425d5b490d92640_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga8a8a6b504851150df425d5b490d92640_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga0772587b98a7fa0cf332788b7e2bd8e6"/><section>
    <title>compensateAndDumpSequence()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>compensateAndDumpSequence</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>compensateAndDumpSequence</secondary></indexterm>
<para><computeroutput>static size_t compensateAndDumpSequence (String * aString, const volatile uint16_t * data, size_t length, uint16_t timebase)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_ir___pronto_8hpp_source_1l00302">302</link> of file <link linkend="_ir___pronto_8hpp_source">ir_Pronto.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga0772587b98a7fa0cf332788b7e2bd8e6_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1gaa701711c860c8ff58d332c4567e7ff89"/><section>
    <title>compensateAndPrintIRResultAsPronto()</title>
<indexterm><primary>compensateAndPrintIRResultAsPronto</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>compensateAndPrintIRResultAsPronto</secondary></indexterm>
<para><computeroutput>void IRrecv::compensateAndPrintIRResultAsPronto (Print * aSerial, unsigned int aFrequencyHertz = <computeroutput>38000U</computeroutput>
)</computeroutput></para>
<para>Print the result (second argument) as Pronto Hex on the Print supplied as argument. Used in the ReceiveDump example. 
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>aSerial</entry><entry>
<para>The Print object on which to write, for Arduino you can use &amp;Serial. </para>
</entry>
                            </row>
                            <row>
<entry>aFrequencyHertz</entry><entry>
<para>Modulation frequency in Hz. Often 38000Hz. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_ir___pronto_8hpp_source_1l00259">259</link> of file <link linkend="_ir___pronto_8hpp_source">ir_Pronto.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gaa701711c860c8ff58d332c4567e7ff89_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga48195517ee0e2cd73788c7956e413014"/><section>
    <title>compensateAndStorePronto()</title>
<indexterm><primary>compensateAndStorePronto</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>compensateAndStorePronto</secondary></indexterm>
<para><computeroutput>size_t IRrecv::compensateAndStorePronto (String * aString, unsigned int frequency = <computeroutput>38000U</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="_ir___pronto_8hpp_source_1l00327">327</link> of file <link linkend="_ir___pronto_8hpp_source">ir_Pronto.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga48195517ee0e2cd73788c7956e413014_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1gaf9a5bf8248971aca9d4f5b68f3e9f858"/><section>
    <title>decodeBoseWave()</title>
<indexterm><primary>decodeBoseWave</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>decodeBoseWave</secondary></indexterm>
<para><computeroutput>bool IRrecv::decodeBoseWave ( )</computeroutput></para><para>
Definition at line <link linkend="_ir___bose_wave_8hpp_source_1l00074">74</link> of file <link linkend="_ir___bose_wave_8hpp_source">ir_BoseWave.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gaf9a5bf8248971aca9d4f5b68f3e9f858_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gaf9a5bf8248971aca9d4f5b68f3e9f858_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga680c0090daf6945a85fd2658af84dfac"/><section>
    <title>decodeDenon()</title>
<indexterm><primary>decodeDenon</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>decodeDenon</secondary></indexterm>
<para><computeroutput>bool IRrecv::decodeDenon ( )</computeroutput></para><para>
Definition at line <link linkend="_ir___denon_8hpp_source_1l00136">136</link> of file <link linkend="_ir___denon_8hpp_source">ir_Denon.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga680c0090daf6945a85fd2658af84dfac_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga680c0090daf6945a85fd2658af84dfac_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga5d11ba281c103fe66e0912c46276c26e"/><section>
    <title>decodeDenonOld()</title>
<indexterm><primary>decodeDenonOld</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>decodeDenonOld</secondary></indexterm>
<para><computeroutput>bool IRrecv::decodeDenonOld (<link linkend="_structdecode__results">decode_results</link> * aResults)</computeroutput></para><para>
Definition at line <link linkend="_ir___denon_8hpp_source_1l00200">200</link> of file <link linkend="_ir___denon_8hpp_source">ir_Denon.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga5d11ba281c103fe66e0912c46276c26e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga5d11ba281c103fe66e0912c46276c26e_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga0d0267f8c89e3cffbecd103195b67f3c"/><section>
    <title>decodeDistance()</title>
<indexterm><primary>decodeDistance</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>decodeDistance</secondary></indexterm>
<para><computeroutput>bool IRrecv::decodeDistance ( )</computeroutput></para><para>
Definition at line <link linkend="_ir___distance_protocol_8hpp_source_1l00121">121</link> of file <link linkend="_ir___distance_protocol_8hpp_source">ir_DistanceProtocol.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga0d0267f8c89e3cffbecd103195b67f3c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga0d0267f8c89e3cffbecd103195b67f3c_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1gad6ecf38f85cefea8f71090fce4dbbbed"/><section>
    <title>decodeJVC()</title>
<indexterm><primary>decodeJVC</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>decodeJVC</secondary></indexterm>
<para><computeroutput>bool IRrecv::decodeJVC ( )</computeroutput></para><para>
Definition at line <link linkend="_ir___j_v_c_8hpp_source_1l00104">104</link> of file <link linkend="_ir___j_v_c_8hpp_source">ir_JVC.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gad6ecf38f85cefea8f71090fce4dbbbed_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gad6ecf38f85cefea8f71090fce4dbbbed_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1gad7512fb183efc882f493ce5ab4c2bd10"/><section>
    <title>decodeJVCMSB()</title>
<indexterm><primary>decodeJVCMSB</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>decodeJVCMSB</secondary></indexterm>
<para><computeroutput>bool IRrecv::decodeJVCMSB (<link linkend="_structdecode__results">decode_results</link> * aResults)</computeroutput></para><para>
Definition at line <link linkend="_ir___j_v_c_8hpp_source_1l00161">161</link> of file <link linkend="_ir___j_v_c_8hpp_source">ir_JVC.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gad7512fb183efc882f493ce5ab4c2bd10_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gad7512fb183efc882f493ce5ab4c2bd10_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga099d67ab5fef881af8838d6cb11d0b14"/><section>
    <title>decodeKaseikyo()</title>
<indexterm><primary>decodeKaseikyo</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>decodeKaseikyo</secondary></indexterm>
<para><computeroutput>bool IRrecv::decodeKaseikyo ( )</computeroutput></para><para>
Definition at line <link linkend="_ir___kaseikyo_8hpp_source_1l00167">167</link> of file <link linkend="_ir___kaseikyo_8hpp_source">ir_Kaseikyo.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga099d67ab5fef881af8838d6cb11d0b14_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga099d67ab5fef881af8838d6cb11d0b14_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1gae96d28d8682a352cb1118aae25d5bba5"/><section>
    <title>decodeLegoPowerFunctions()</title>
<indexterm><primary>decodeLegoPowerFunctions</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>decodeLegoPowerFunctions</secondary></indexterm>
<para><computeroutput>bool IRrecv::decodeLegoPowerFunctions ( )</computeroutput></para><para>
Definition at line <link linkend="_ir___lego_8hpp_source_1l00146">146</link> of file <link linkend="_ir___lego_8hpp_source">ir_Lego.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gae96d28d8682a352cb1118aae25d5bba5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gae96d28d8682a352cb1118aae25d5bba5_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1gac098ec62da77aa75ca9016d289f3d7aa"/><section>
    <title>decodeLG()</title>
<indexterm><primary>decodeLG</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>decodeLG</secondary></indexterm>
<para><computeroutput>bool IRrecv::decodeLG ( )</computeroutput></para><para>
Definition at line <link linkend="_ir___l_g_8hpp_source_1l00175">175</link> of file <link linkend="_ir___l_g_8hpp_source">ir_LG.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gac098ec62da77aa75ca9016d289f3d7aa_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gac098ec62da77aa75ca9016d289f3d7aa_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga1db023ba20fabb7190751b66445cc872"/><section>
    <title>decodeLGMSB()</title>
<indexterm><primary>decodeLGMSB</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>decodeLGMSB</secondary></indexterm>
<para><computeroutput>bool IRrecv::decodeLGMSB (<link linkend="_structdecode__results">decode_results</link> * aResults)</computeroutput></para><para>
Definition at line <link linkend="_ir___l_g_8hpp_source_1l00267">267</link> of file <link linkend="_ir___l_g_8hpp_source">ir_LG.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga1db023ba20fabb7190751b66445cc872_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga1db023ba20fabb7190751b66445cc872_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga3f1a3a12862517a61341a92dfb0ea7f8"/><section>
    <title>decodeNEC()</title>
<indexterm><primary>decodeNEC</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>decodeNEC</secondary></indexterm>
<para><computeroutput>bool IRrecv::decodeNEC ( )</computeroutput></para><para>
Definition at line <link linkend="_ir___n_e_c_8hpp_source_1l00194">194</link> of file <link linkend="_ir___n_e_c_8hpp_source">ir_NEC.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga3f1a3a12862517a61341a92dfb0ea7f8_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga3f1a3a12862517a61341a92dfb0ea7f8_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga2b6633498c7e7b1ce64bb7f12a1ab4bd"/><section>
    <title>decodeNECMSB()</title>
<indexterm><primary>decodeNECMSB</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>decodeNECMSB</secondary></indexterm>
<para><computeroutput>bool IRrecv::decodeNECMSB (<link linkend="_structdecode__results">decode_results</link> * aResults)</computeroutput></para><para>
Definition at line <link linkend="_ir___n_e_c_8hpp_source_1l00290">290</link> of file <link linkend="_ir___n_e_c_8hpp_source">ir_NEC.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga2b6633498c7e7b1ce64bb7f12a1ab4bd_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga2b6633498c7e7b1ce64bb7f12a1ab4bd_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga5b0375df7166d1b6b1886891768a9379"/><section>
    <title>decodePanasonicMSB()</title>
<indexterm><primary>decodePanasonicMSB</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>decodePanasonicMSB</secondary></indexterm>
<para><computeroutput>bool IRrecv::decodePanasonicMSB (<link linkend="_structdecode__results">decode_results</link> * aResults)</computeroutput></para>
<para>Old MSB first decoder </para>
<para>
Definition at line <link linkend="_ir___kaseikyo_8hpp_source_1l00281">281</link> of file <link linkend="_ir___kaseikyo_8hpp_source">ir_Kaseikyo.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga5b0375df7166d1b6b1886891768a9379_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga5b0375df7166d1b6b1886891768a9379_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga5720b53e427e0346ecc248e55c57e2b9"/><section>
    <title>decodeRC5()</title>
<indexterm><primary>decodeRC5</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>decodeRC5</secondary></indexterm>
<para><computeroutput>bool IRrecv::decodeRC5 ( )</computeroutput></para>
<para>Try to decode data as RC5 protocol <informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
 Clock _____| |_| |_| |_| |_| |_| |_| |_| |_| |_| |_| |_| |_| | ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ End of each data bit period _ _ - Mark 2 Start bits for RC5 _____| |_| ... - Data starts with a space-&gt;mark bit<itemizedlist>
<listitem>
<para>Space _ 1 Start bit for RC5X _____| ... </para>
</listitem></itemizedlist>
</para>
<para>
Definition at line <link linkend="_ir___r_c5___r_c6_8hpp_source_1l00132">132</link> of file <link linkend="_ir___r_c5___r_c6_8hpp_source">ir_RC5_RC6.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga5720b53e427e0346ecc248e55c57e2b9_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga5720b53e427e0346ecc248e55c57e2b9_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1gad98448418d525479e74c1a38725b498f"/><section>
    <title>decodeRC6()</title>
<indexterm><primary>decodeRC6</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>decodeRC6</secondary></indexterm>
<para><computeroutput>bool IRrecv::decodeRC6 ( )</computeroutput></para>
<para>Try to decode data as RC6 protocol </para>
<para>
Definition at line <link linkend="_ir___r_c5___r_c6_8hpp_source_1l00349">349</link> of file <link linkend="_ir___r_c5___r_c6_8hpp_source">ir_RC5_RC6.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gad98448418d525479e74c1a38725b498f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gad98448418d525479e74c1a38725b498f_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga06311ef402fe0a9cc85ad9defd35fdec"/><section>
    <title>decodeSamsung()</title>
<indexterm><primary>decodeSamsung</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>decodeSamsung</secondary></indexterm>
<para><computeroutput>bool IRrecv::decodeSamsung ( )</computeroutput></para><para>
Definition at line <link linkend="_ir___samsung_8hpp_source_1l00126">126</link> of file <link linkend="_ir___samsung_8hpp_source">ir_Samsung.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga06311ef402fe0a9cc85ad9defd35fdec_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga06311ef402fe0a9cc85ad9defd35fdec_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga6bdd668914f10932bc87bc57c4059ccd"/><section>
    <title>decodeSAMSUNG()</title>
<indexterm><primary>decodeSAMSUNG</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>decodeSAMSUNG</secondary></indexterm>
<para><computeroutput>bool IRrecv::decodeSAMSUNG (<link linkend="_structdecode__results">decode_results</link> * aResults)</computeroutput></para><para>
Definition at line <link linkend="_ir___samsung_8hpp_source_1l00215">215</link> of file <link linkend="_ir___samsung_8hpp_source">ir_Samsung.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga6bdd668914f10932bc87bc57c4059ccd_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga6bdd668914f10932bc87bc57c4059ccd_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga7edfd9309ccd7f87762a17480635dcd6"/><section>
    <title>decodeSharp()</title>
<indexterm><primary>decodeSharp</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>decodeSharp</secondary></indexterm>
<para><computeroutput>bool IRrecv::decodeSharp ( )</computeroutput></para><para>
Definition at line <link linkend="_ir___denon_8hpp_source_1l00131">131</link> of file <link linkend="_ir___denon_8hpp_source">ir_Denon.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga7edfd9309ccd7f87762a17480635dcd6_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1gaa4b87d095decf4ec8d9e4c445d6dfa27"/><section>
    <title>decodeSony()</title>
<indexterm><primary>decodeSony</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>decodeSony</secondary></indexterm>
<para><computeroutput>bool IRrecv::decodeSony ( )</computeroutput></para><para>
Definition at line <link linkend="_ir___sony_8hpp_source_1l00103">103</link> of file <link linkend="_ir___sony_8hpp_source">ir_Sony.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gaa4b87d095decf4ec8d9e4c445d6dfa27_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gaa4b87d095decf4ec8d9e4c445d6dfa27_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga7ea1a0eb3b832974be8fd6c2cbde602f"/><section>
    <title>decodeSonyMSB()</title>
<indexterm><primary>decodeSonyMSB</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>decodeSonyMSB</secondary></indexterm>
<para><computeroutput>bool IRrecv::decodeSonyMSB (<link linkend="_structdecode__results">decode_results</link> * aResults)</computeroutput></para><para>
Definition at line <link linkend="_ir___sony_8hpp_source_1l00153">153</link> of file <link linkend="_ir___sony_8hpp_source">ir_Sony.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga7ea1a0eb3b832974be8fd6c2cbde602f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga7ea1a0eb3b832974be8fd6c2cbde602f_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga1de38e9831f29991f9be0e7a2583f142"/><section>
    <title>decodeWhynter()</title>
<indexterm><primary>decodeWhynter</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>decodeWhynter</secondary></indexterm>
<para><computeroutput>bool IRrecv::decodeWhynter ( )</computeroutput></para><para>
Definition at line <link linkend="_ir___whynter_8hpp_source_1l00048">48</link> of file <link linkend="_ir___whynter_8hpp_source">ir_Whynter.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga1de38e9831f29991f9be0e7a2583f142_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga1de38e9831f29991f9be0e7a2583f142_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1gaa82a581fafa8fa2310b7241fe1ded33d"/><section>
    <title>dumpDigit()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>dumpDigit</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>dumpDigit</secondary></indexterm>
<para><computeroutput>static void dumpDigit (Print * aSerial, unsigned int number)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_ir___pronto_8hpp_source_1l00218">218</link> of file <link linkend="_ir___pronto_8hpp_source">ir_Pronto.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gaa82a581fafa8fa2310b7241fe1ded33d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gaa82a581fafa8fa2310b7241fe1ded33d_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1gab3ca394ad13ba555852f3bb61d488c7b"/><section>
    <title>dumpDigit()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>dumpDigit</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>dumpDigit</secondary></indexterm>
<para><computeroutput>static bool dumpDigit (String * aString, unsigned int number)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_ir___pronto_8hpp_source_1l00276">276</link> of file <link linkend="_ir___pronto_8hpp_source">ir_Pronto.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gab3ca394ad13ba555852f3bb61d488c7b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga479fbb18cdfa303a8bc4322123f831df"/><section>
    <title>dumpDuration()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>dumpDuration</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>dumpDuration</secondary></indexterm>
<para><computeroutput>static void dumpDuration (Print * aSerial, uint32_t duration, uint16_t timebase)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_ir___pronto_8hpp_source_1l00230">230</link> of file <link linkend="_ir___pronto_8hpp_source">ir_Pronto.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga479fbb18cdfa303a8bc4322123f831df_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga479fbb18cdfa303a8bc4322123f831df_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga536975baa9f5346484fc32bd48255d07"/><section>
    <title>dumpDuration()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>dumpDuration</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>dumpDuration</secondary></indexterm>
<para><computeroutput>static size_t dumpDuration (String * aString, uint32_t duration, uint16_t timebase)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_ir___pronto_8hpp_source_1l00298">298</link> of file <link linkend="_ir___pronto_8hpp_source">ir_Pronto.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga536975baa9f5346484fc32bd48255d07_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga69048be6384abbbe3c17e3f25432a392"/><section>
    <title>dumpNumber()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>dumpNumber</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>dumpNumber</secondary></indexterm>
<para><computeroutput>static void dumpNumber (Print * aSerial, uint16_t number)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_ir___pronto_8hpp_source_1l00222">222</link> of file <link linkend="_ir___pronto_8hpp_source">ir_Pronto.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga69048be6384abbbe3c17e3f25432a392_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga69048be6384abbbe3c17e3f25432a392_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1gab49c8cfa7e96e3c5b54f9a41edbd33ba"/><section>
    <title>dumpNumber()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>dumpNumber</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>dumpNumber</secondary></indexterm>
<para><computeroutput>static size_t dumpNumber (String * aString, uint16_t number)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_ir___pronto_8hpp_source_1l00281">281</link> of file <link linkend="_ir___pronto_8hpp_source">ir_Pronto.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gab49c8cfa7e96e3c5b54f9a41edbd33ba_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga1272f3783a3b8d2cf2241f1e76674c8a"/><section>
    <title>effectiveFrequency()</title>
<indexterm><primary>effectiveFrequency</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>effectiveFrequency</secondary></indexterm>
<para><computeroutput>static uint16_t effectiveFrequency (uint16_t frequency)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_ir___pronto_8hpp_source_1l00202">202</link> of file <link linkend="_ir___pronto_8hpp_source">ir_Pronto.hpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga1272f3783a3b8d2cf2241f1e76674c8a_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga7741bc8892620b5da6c38a29d3d48668"/><section>
    <title>hexDigit()</title>
<indexterm><primary>hexDigit</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>hexDigit</secondary></indexterm>
<para><computeroutput>static char hexDigit (unsigned int x)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_ir___pronto_8hpp_source_1l00214">214</link> of file <link linkend="_ir___pronto_8hpp_source">ir_Pronto.hpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga7741bc8892620b5da6c38a29d3d48668_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga15fbc8a08b929395d6be6549cb296db5"/><section>
    <title>sendApple()</title>
<indexterm><primary>sendApple</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendApple</secondary></indexterm>
<para><computeroutput>void IRsend::sendApple (uint8_t aAddress, uint8_t aCommand, uint_fast8_t aNumberOfRepeats, bool aIsRepeat = <computeroutput>false</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="_ir___n_e_c_8hpp_source_1l00141">141</link> of file <link linkend="_ir___n_e_c_8hpp_source">ir_NEC.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga15fbc8a08b929395d6be6549cb296db5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga15fbc8a08b929395d6be6549cb296db5_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga56bfe794dedefda7cc2487301fe1f1f3"/><section>
    <title>sendBoseWave()</title>
<indexterm><primary>sendBoseWave</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendBoseWave</secondary></indexterm>
<para><computeroutput>void IRsend::sendBoseWave (uint8_t aCommand, uint_fast8_t aNumberOfRepeats = <computeroutput><link linkend="__i_rremote_int_8h_1a5d35fb37031b53f0083f8b88ae3cf2c2">NO_REPEATS</link></computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="_ir___bose_wave_8hpp_source_1l00048">48</link> of file <link linkend="_ir___bose_wave_8hpp_source">ir_BoseWave.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga56bfe794dedefda7cc2487301fe1f1f3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga56bfe794dedefda7cc2487301fe1f1f3_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga342baabd2418ed33d6d847ea5f53f165"/><section>
    <title>sendDenon()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>sendDenon</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendDenon</secondary></indexterm>
<para><computeroutput>void IRsend::sendDenon (uint8_t aAddress, uint8_t aCommand, uint_fast8_t aNumberOfRepeats, bool aSendSharp = <computeroutput>false</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="_ir___denon_8hpp_source_1l00097">97</link> of file <link linkend="_ir___denon_8hpp_source">ir_Denon.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga342baabd2418ed33d6d847ea5f53f165_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga342baabd2418ed33d6d847ea5f53f165_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1gab5a2c0a20071c7b37f0d1cd99680d513"/><section>
    <title>sendDenon()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>sendDenon</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendDenon</secondary></indexterm>
<para><computeroutput>void IRsend::sendDenon (unsigned long data, int nbits)</computeroutput></para><para>
Definition at line <link linkend="_ir___denon_8hpp_source_1l00229">229</link> of file <link linkend="_ir___denon_8hpp_source">ir_Denon.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gab5a2c0a20071c7b37f0d1cd99680d513_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga24eb15e28a8cbfa9a19e106ebd736731"/><section>
    <title>sendDenonRaw()</title>
<indexterm><primary>sendDenonRaw</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendDenonRaw</secondary></indexterm>
<para><computeroutput>void IRsend::sendDenonRaw (uint16_t aRawData, uint_fast8_t aNumberOfRepeats = <computeroutput>0</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="_ir___denon_8hpp_source_1l00092">92</link> of file <link linkend="_ir___denon_8hpp_source">ir_Denon.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga24eb15e28a8cbfa9a19e106ebd736731_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga5b226cb8ff607ec666fbab236fcd1ec9"/><section>
    <title>sendJVC()</title>
<indexterm><primary>sendJVC</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendJVC</secondary></indexterm>
<para><computeroutput>void IRsend::sendJVC (uint8_t aAddress, uint8_t aCommand, uint_fast8_t aNumberOfRepeats)</computeroutput></para><para>
Definition at line <link linkend="_ir___j_v_c_8hpp_source_1l00075">75</link> of file <link linkend="_ir___j_v_c_8hpp_source">ir_JVC.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga5b226cb8ff607ec666fbab236fcd1ec9_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga5b226cb8ff607ec666fbab236fcd1ec9_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1gae3ffaf23301bec85ca0c2c7499f484a3"/><section>
    <title>sendJVCMSB()</title>
<indexterm><primary>sendJVCMSB</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendJVCMSB</secondary></indexterm>
<para><computeroutput>void IRsend::sendJVCMSB (unsigned long data, int nbits, bool repeat = <computeroutput>false</computeroutput>
)</computeroutput></para>
<para>With Send <link linkend="_group___decoder_1gae3ffaf23301bec85ca0c2c7499f484a3">sendJVCMSB()</link> you can send your old 32 bit codes. To convert one into the other, you must reverse the byte positions and then reverse all bit positions of each byte. Or write it as one binary string and reverse/mirror it. Example: 0xCB340102 byte reverse -&gt; 02 01 34 CB bit reverse-&gt; 40 80 2C D3. 0xCB340102 is binary 11001011001101000000000100000010. 0x40802CD3 is binary 01000000100000000010110011010011. If you read the first binary sequence backwards (right to left), you get the second sequence. </para>
<para>
Definition at line <link linkend="_ir___j_v_c_8hpp_source_1l00224">224</link> of file <link linkend="_ir___j_v_c_8hpp_source">ir_JVC.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gae3ffaf23301bec85ca0c2c7499f484a3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gae3ffaf23301bec85ca0c2c7499f484a3_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga4b61477c5bd7a32ec7d005d7bb88c610"/><section>
    <title>sendKaseikyo()</title>
<indexterm><primary>sendKaseikyo</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendKaseikyo</secondary></indexterm>
<para><computeroutput>void IRsend::sendKaseikyo (uint16_t aAddress, uint8_t aData, uint_fast8_t aNumberOfRepeats, uint16_t aVendorCode)</computeroutput></para><para>
Definition at line <link linkend="_ir___kaseikyo_8hpp_source_1l00090">90</link> of file <link linkend="_ir___kaseikyo_8hpp_source">ir_Kaseikyo.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga4b61477c5bd7a32ec7d005d7bb88c610_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga4b61477c5bd7a32ec7d005d7bb88c610_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga9c3687ea0ab26ce088bd2a8a0aa1f1c8"/><section>
    <title>sendKaseikyo_Denon()</title>
<indexterm><primary>sendKaseikyo_Denon</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendKaseikyo_Denon</secondary></indexterm>
<para><computeroutput>void IRsend::sendKaseikyo_Denon (uint16_t aAddress, uint8_t aCommand, uint_fast8_t aNumberOfRepeats)</computeroutput></para>
<para>Stub using Kaseikyo with DENON_VENDOR_ID_CODE </para>
<para>
Definition at line <link linkend="_ir___kaseikyo_8hpp_source_1l00139">139</link> of file <link linkend="_ir___kaseikyo_8hpp_source">ir_Kaseikyo.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga9c3687ea0ab26ce088bd2a8a0aa1f1c8_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga9c3687ea0ab26ce088bd2a8a0aa1f1c8_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga43bf86aaaa216292f8eb7d0941731241"/><section>
    <title>sendKaseikyo_JVC()</title>
<indexterm><primary>sendKaseikyo_JVC</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendKaseikyo_JVC</secondary></indexterm>
<para><computeroutput>void IRsend::sendKaseikyo_JVC (uint16_t aAddress, uint8_t aCommand, uint_fast8_t aNumberOfRepeats)</computeroutput></para>
<para>Stub using Kaseikyo with JVC_VENDOR_ID_CODE </para>
<para>
Definition at line <link linkend="_ir___kaseikyo_8hpp_source_1l00160">160</link> of file <link linkend="_ir___kaseikyo_8hpp_source">ir_Kaseikyo.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga43bf86aaaa216292f8eb7d0941731241_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga43bf86aaaa216292f8eb7d0941731241_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1gaf42f22f1d83211811b4ec765d4dc0a7f"/><section>
    <title>sendKaseikyo_Mitsubishi()</title>
<indexterm><primary>sendKaseikyo_Mitsubishi</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendKaseikyo_Mitsubishi</secondary></indexterm>
<para><computeroutput>void IRsend::sendKaseikyo_Mitsubishi (uint16_t aAddress, uint8_t aCommand, uint_fast8_t aNumberOfRepeats)</computeroutput></para>
<para>Stub using Kaseikyo with MITSUBISHI_VENDOR_ID_CODE </para>
<para>
Definition at line <link linkend="_ir___kaseikyo_8hpp_source_1l00146">146</link> of file <link linkend="_ir___kaseikyo_8hpp_source">ir_Kaseikyo.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gaf42f22f1d83211811b4ec765d4dc0a7f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gaf42f22f1d83211811b4ec765d4dc0a7f_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga6fee66f189ae46afac1ebe876ffbbf58"/><section>
    <title>sendKaseikyo_Sharp()</title>
<indexterm><primary>sendKaseikyo_Sharp</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendKaseikyo_Sharp</secondary></indexterm>
<para><computeroutput>void IRsend::sendKaseikyo_Sharp (uint16_t aAddress, uint8_t aCommand, uint_fast8_t aNumberOfRepeats)</computeroutput></para>
<para>Stub using Kaseikyo with SHARP_VENDOR_ID_CODE </para>
<para>
Definition at line <link linkend="_ir___kaseikyo_8hpp_source_1l00153">153</link> of file <link linkend="_ir___kaseikyo_8hpp_source">ir_Kaseikyo.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga6fee66f189ae46afac1ebe876ffbbf58_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga6fee66f189ae46afac1ebe876ffbbf58_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga315bc3587e7c4aa15629155b66e52728"/><section>
    <title>sendLegoPowerFunctions()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>sendLegoPowerFunctions</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendLegoPowerFunctions</secondary></indexterm>
<para><computeroutput>void IRsend::sendLegoPowerFunctions (uint16_t aRawData, bool aDoSend5Times = <computeroutput>true</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="_ir___lego_8hpp_source_1l00092">92</link> of file <link linkend="_ir___lego_8hpp_source">ir_Lego.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga315bc3587e7c4aa15629155b66e52728_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1gaea94765ecf1af29cf323354be4d74538"/><section>
    <title>sendLegoPowerFunctions()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>sendLegoPowerFunctions</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendLegoPowerFunctions</secondary></indexterm>
<para><computeroutput>void IRsend::sendLegoPowerFunctions (uint16_t aRawData, uint8_t aChannel, bool aDoSend5Times = <computeroutput>true</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="_ir___lego_8hpp_source_1l00110">110</link> of file <link linkend="_ir___lego_8hpp_source">ir_Lego.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gaea94765ecf1af29cf323354be4d74538_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1gaa62e64650aaae09b6f001a53a31f00b8"/><section>
    <title>sendLegoPowerFunctions()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>sendLegoPowerFunctions</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendLegoPowerFunctions</secondary></indexterm>
<para><computeroutput>void IRsend::sendLegoPowerFunctions (uint8_t aChannel, uint8_t tCommand, uint8_t aMode, bool aDoSend5Times = <computeroutput>true</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="_ir___lego_8hpp_source_1l00099">99</link> of file <link linkend="_ir___lego_8hpp_source">ir_Lego.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gaa62e64650aaae09b6f001a53a31f00b8_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gaa62e64650aaae09b6f001a53a31f00b8_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1gaf5095df5a6598fe2651510e4a8d5e018"/><section>
    <title>sendLG()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>sendLG</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendLG</secondary></indexterm>
<para><computeroutput>void IRsend::sendLG (uint8_t aAddress, uint16_t aCommand, uint_fast8_t aNumberOfRepeats, bool aIsRepeat = <computeroutput>false</computeroutput>
, bool aUseLG2Protocol = <computeroutput>false</computeroutput>
)</computeroutput></para>
<para>Repeat commands should be sent in a 110 ms raster. There is NO delay after the last sent repeat! 
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>aUseLG2Protocol</entry><entry>
<para>if true use LG2 protocol, which has a different header </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_ir___l_g_8hpp_source_1l00112">112</link> of file <link linkend="_ir___l_g_8hpp_source">ir_LG.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gaf5095df5a6598fe2651510e4a8d5e018_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gaf5095df5a6598fe2651510e4a8d5e018_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga88ecc2eb801abf6aa1428cc0669abe94"/><section>
    <title>sendLG()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>sendLG</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendLG</secondary></indexterm>
<para><computeroutput>void IRsend::sendLG (unsigned long data, int nbits)</computeroutput></para><para>
Definition at line <link linkend="_ir___l_g_8hpp_source_1l00304">304</link> of file <link linkend="_ir___l_g_8hpp_source">ir_LG.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga88ecc2eb801abf6aa1428cc0669abe94_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga9f8683daf286269b2aafab5e86a8bfc1"/><section>
    <title>sendLGRaw()</title>
<indexterm><primary>sendLGRaw</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendLGRaw</secondary></indexterm>
<para><computeroutput>void IRsend::sendLGRaw (uint32_t aRawData, uint_fast8_t aNumberOfRepeats = <computeroutput>0</computeroutput>
, bool aIsRepeat = <computeroutput>false</computeroutput>
, bool aUseLG2Protocol = <computeroutput>false</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="_ir___l_g_8hpp_source_1l00131">131</link> of file <link linkend="_ir___l_g_8hpp_source">ir_LG.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga9f8683daf286269b2aafab5e86a8bfc1_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga9f8683daf286269b2aafab5e86a8bfc1_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga59c09c7300fa34bc136b7be9bdebe2b5"/><section>
    <title>sendLGRepeat()</title>
<indexterm><primary>sendLGRepeat</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendLGRepeat</secondary></indexterm>
<para><computeroutput>void IRsend::sendLGRepeat (bool aUseLG2Protocol = <computeroutput>false</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="_ir___l_g_8hpp_source_1l00096">96</link> of file <link linkend="_ir___l_g_8hpp_source">ir_LG.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga59c09c7300fa34bc136b7be9bdebe2b5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga59c09c7300fa34bc136b7be9bdebe2b5_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1gacc081690ddf61dec5d3f1c55000da7f5"/><section>
    <title>sendNEC()</title>
<indexterm><primary>sendNEC</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendNEC</secondary></indexterm>
<para><computeroutput>void IRsend::sendNEC (uint16_t aAddress, uint8_t aCommand, uint_fast8_t aNumberOfRepeats, bool aIsRepeat = <computeroutput>false</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="_ir___n_e_c_8hpp_source_1l00096">96</link> of file <link linkend="_ir___n_e_c_8hpp_source">ir_NEC.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gacc081690ddf61dec5d3f1c55000da7f5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gacc081690ddf61dec5d3f1c55000da7f5_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga0184d3edbfe2659b12fc157c3be0cd63"/><section>
    <title>sendNECMSB()</title>
<indexterm><primary>sendNECMSB</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendNECMSB</secondary></indexterm>
<para><computeroutput>void IRsend::sendNECMSB (uint32_t data, uint8_t nbits, bool repeat = <computeroutput>false</computeroutput>
)</computeroutput></para>
<para>With Send <link linkend="_group___decoder_1ga0184d3edbfe2659b12fc157c3be0cd63">sendNECMSB()</link> you can send your old 32 bit codes. To convert one into the other, you must reverse the byte positions and then reverse all bit positions of each byte. Or write it as one binary string and reverse/mirror it. Example: 0xCB340102 byte reverse -&gt; 02 01 34 CB bit reverse-&gt; 40 80 2C D3. 0xCB340102 is binary 11001011001101000000000100000010. 0x40802CD3 is binary 01000000100000000010110011010011. If you read the first binary sequence backwards (right to left), you get the second sequence. </para>
<para>
Definition at line <link linkend="_ir___n_e_c_8hpp_source_1l00358">358</link> of file <link linkend="_ir___n_e_c_8hpp_source">ir_NEC.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga0184d3edbfe2659b12fc157c3be0cd63_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga0184d3edbfe2659b12fc157c3be0cd63_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1gaaeec0a3f8d592deee8746a5b06bc3454"/><section>
    <title>sendNECRaw()</title>
<indexterm><primary>sendNECRaw</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendNECRaw</secondary></indexterm>
<para><computeroutput>void IRsend::sendNECRaw (uint32_t aRawData, uint_fast8_t aNumberOfRepeats = <computeroutput>0</computeroutput>
, bool aIsRepeat = <computeroutput>false</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="_ir___n_e_c_8hpp_source_1l00155">155</link> of file <link linkend="_ir___n_e_c_8hpp_source">ir_NEC.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gaaeec0a3f8d592deee8746a5b06bc3454_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gaaeec0a3f8d592deee8746a5b06bc3454_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1gae8fff4f1d8703ca18ea85a15289dc44c"/><section>
    <title>sendNECRepeat()</title>
<indexterm><primary>sendNECRepeat</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendNECRepeat</secondary></indexterm>
<para><computeroutput>void IRsend::sendNECRepeat ( )</computeroutput></para><para>
Definition at line <link linkend="_ir___n_e_c_8hpp_source_1l00082">82</link> of file <link linkend="_ir___n_e_c_8hpp_source">ir_NEC.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gae8fff4f1d8703ca18ea85a15289dc44c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gae8fff4f1d8703ca18ea85a15289dc44c_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga857b05f2b99e8b705cb6d00470c4e78b"/><section>
    <title>sendOnkyo()</title>
<indexterm><primary>sendOnkyo</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendOnkyo</secondary></indexterm>
<para><computeroutput>void IRsend::sendOnkyo (uint16_t aAddress, uint16_t aCommand, uint_fast8_t aNumberOfRepeats, bool aIsRepeat = <computeroutput>false</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="_ir___n_e_c_8hpp_source_1l00121">121</link> of file <link linkend="_ir___n_e_c_8hpp_source">ir_NEC.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga857b05f2b99e8b705cb6d00470c4e78b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga857b05f2b99e8b705cb6d00470c4e78b_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga205cb2e4005389ce19e769b25002b2a2"/><section>
    <title>sendPanasonic()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>sendPanasonic</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendPanasonic</secondary></indexterm>
<para><computeroutput>void IRsend::sendPanasonic (uint16_t aAddress, uint32_t aData)</computeroutput></para>
<para>Old version with MSB first data </para>
<para>
Definition at line <link linkend="_ir___kaseikyo_8hpp_source_1l00315">315</link> of file <link linkend="_ir___kaseikyo_8hpp_source">ir_Kaseikyo.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga205cb2e4005389ce19e769b25002b2a2_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1gad3a14e1a94a402a4cbe0eeeded312173"/><section>
    <title>sendPanasonic()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>sendPanasonic</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendPanasonic</secondary></indexterm>
<para><computeroutput>void IRsend::sendPanasonic (uint16_t aAddress, uint8_t aCommand, uint_fast8_t aNumberOfRepeats)</computeroutput></para>
<para>Stub using Kaseikyo with PANASONIC_VENDOR_ID_CODE </para>
<para>
Definition at line <link linkend="_ir___kaseikyo_8hpp_source_1l00132">132</link> of file <link linkend="_ir___kaseikyo_8hpp_source">ir_Kaseikyo.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gad3a14e1a94a402a4cbe0eeeded312173_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gad3a14e1a94a402a4cbe0eeeded312173_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga26830e1c38ef9caa1caedeb9e7dabb7a"/><section>
    <title>sendPronto()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>sendPronto</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendPronto</secondary></indexterm>
<para><computeroutput>void IRsend::sendPronto (const __FlashStringHelper * str, uint_fast8_t aNumberOfRepeats = <computeroutput><link linkend="__i_rremote_int_8h_1a5d35fb37031b53f0083f8b88ae3cf2c2">NO_REPEATS</link></computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="_ir___pronto_8hpp_source_1l00195">195</link> of file <link linkend="_ir___pronto_8hpp_source">ir_Pronto.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga26830e1c38ef9caa1caedeb9e7dabb7a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga26830e1c38ef9caa1caedeb9e7dabb7a_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga5174f63b73d3ba9fe997bdb98a4af0c5"/><section>
    <title>sendPronto()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>sendPronto</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendPronto</secondary></indexterm>
<para><computeroutput>void IRsend::sendPronto (const char * str, uint_fast8_t aNumberOfRepeats = <computeroutput><link linkend="__i_rremote_int_8h_1a5d35fb37031b53f0083f8b88ae3cf2c2">NO_REPEATS</link></computeroutput>
)</computeroutput></para>
<para>Parse the string given as Pronto Hex, and send it a number of times given as the second argument. Thereby the division of the Pronto Hex into an intro-sequence and a repeat sequence is taken into account: First the intro sequence is sent, then the repeat sequence is sent times-1 times. However, if the intro sequence is empty, the repeat sequence is sent times times. <link xlink:href="http://www.harctoolbox.org/Glossary.html#ProntoSemantics">Reference</link>.</para>

<para>Note: Using this function is very wasteful for the memory consumption on a small board. Normally it is a much better idea to use a tool like e.g. IrScrutinizer to transform Pronto type signals offline to a more memory efficient format.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>str</entry><entry>
<para>C type string (null terminated) containing a Pronto Hex representation. </para>
</entry>
                            </row>
                            <row>
<entry>aNumberOfRepeats</entry><entry>
<para>Number of times to send the signal. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_ir___pronto_8hpp_source_1l00154">154</link> of file <link linkend="_ir___pronto_8hpp_source">ir_Pronto.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga5174f63b73d3ba9fe997bdb98a4af0c5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga4f221f872371078dd6d4f3ffa87b7b10"/><section>
    <title>sendPronto()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>sendPronto</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendPronto</secondary></indexterm>
<para><computeroutput>void IRsend::sendPronto (const uint16_t * data, unsigned int length, uint_fast8_t aNumberOfRepeats = <computeroutput><link linkend="__i_rremote_int_8h_1a5d35fb37031b53f0083f8b88ae3cf2c2">NO_REPEATS</link></computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="_ir___pronto_8hpp_source_1l00077">77</link> of file <link linkend="_ir___pronto_8hpp_source">ir_Pronto.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga4f221f872371078dd6d4f3ffa87b7b10_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga6168e3ad4e47c657c9f3de0e5d7590b3"/><section>
    <title>sendRC5()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>sendRC5</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendRC5</secondary></indexterm>
<para><computeroutput>void IRsend::sendRC5 (uint32_t data, uint8_t nbits)</computeroutput></para>
<para>Old version with 32 bit data </para>
<para>
Definition at line <link linkend="_ir___r_c5___r_c6_8hpp_source_1l00468">468</link> of file <link linkend="_ir___r_c5___r_c6_8hpp_source">ir_RC5_RC6.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga6168e3ad4e47c657c9f3de0e5d7590b3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga55808fcce8aaf429ebbb1d34cb7f5ee5"/><section>
    <title>sendRC5()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>sendRC5</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendRC5</secondary></indexterm>
<para><computeroutput>void IRsend::sendRC5 (uint8_t aAddress, uint8_t aCommand, uint_fast8_t aNumberOfRepeats, bool aEnableAutomaticToggle = <computeroutput>true</computeroutput>
)</computeroutput></para>
<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>aCommand</entry><entry>
<para>If aCommand is &gt;=64 then we switch automatically to RC5X </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_ir___r_c5___r_c6_8hpp_source_1l00079">79</link> of file <link linkend="_ir___r_c5___r_c6_8hpp_source">ir_RC5_RC6.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga55808fcce8aaf429ebbb1d34cb7f5ee5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga55808fcce8aaf429ebbb1d34cb7f5ee5_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1gaee1c9e1d8ab6dcf642d6707b4528385b"/><section>
    <title>sendRC5ext()</title>
<indexterm><primary>sendRC5ext</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendRC5ext</secondary></indexterm>
<para><computeroutput>void IRsend::sendRC5ext (uint8_t addr, uint8_t cmd, bool toggle)</computeroutput></para><para>
Definition at line <link linkend="_ir___r_c5___r_c6_8hpp_source_1l00492">492</link> of file <link linkend="_ir___r_c5___r_c6_8hpp_source">ir_RC5_RC6.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gaee1c9e1d8ab6dcf642d6707b4528385b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1gab2553414d8480f449762eb00a3ff7d6d"/><section>
    <title>sendRC6()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>sendRC6</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendRC6</secondary></indexterm>
<para><computeroutput>void IRsend::sendRC6 (uint32_t aRawData, uint8_t aNumberOfBitsToSend)</computeroutput></para>
<para>Main RC6 send function </para>
<para>
Definition at line <link linkend="_ir___r_c5___r_c6_8hpp_source_1l00244">244</link> of file <link linkend="_ir___r_c5___r_c6_8hpp_source">ir_RC5_RC6.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gab2553414d8480f449762eb00a3ff7d6d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1gae6bfe6af18c1bb7f34fda4338882b435"/><section>
    <title>sendRC6()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>sendRC6</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendRC6</secondary></indexterm>
<para><computeroutput>void IRsend::sendRC6 (uint64_t data, uint8_t nbits)</computeroutput></para>
<para>Send RC6 64 bit raw data We do not wait for the minimal trailing space of 2666 us </para>
<para>
Definition at line <link linkend="_ir___r_c5___r_c6_8hpp_source_1l00275">275</link> of file <link linkend="_ir___r_c5___r_c6_8hpp_source">ir_RC5_RC6.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gae6bfe6af18c1bb7f34fda4338882b435_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1gad26a55d87f9f8cc64a77b4571ae79e5f"/><section>
    <title>sendRC6()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>sendRC6</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendRC6</secondary></indexterm>
<para><computeroutput>void IRsend::sendRC6 (uint8_t aAddress, uint8_t aCommand, uint_fast8_t aNumberOfRepeats, bool aEnableAutomaticToggle = <computeroutput>true</computeroutput>
)</computeroutput></para>
<para>Assemble raw data for RC6 from parameters and toggle state and send We do not wait for the minimal trailing space of 2666 us 
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>aEnableAutomaticToggle</entry><entry>
<para>Send toggle bit according to the state of the static sLastSendToggleValue variable. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_ir___r_c5___r_c6_8hpp_source_1l00307">307</link> of file <link linkend="_ir___r_c5___r_c6_8hpp_source">ir_RC5_RC6.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gad26a55d87f9f8cc64a77b4571ae79e5f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_gad26a55d87f9f8cc64a77b4571ae79e5f_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga5d194d783811b52669eb1c1ab17a3a0f"/><section>
    <title>sendSamsung()</title>
<indexterm><primary>sendSamsung</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendSamsung</secondary></indexterm>
<para><computeroutput>void IRsend::sendSamsung (uint16_t aAddress, uint16_t aCommand, uint_fast8_t aNumberOfRepeats, bool aIsRepeat = <computeroutput>false</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="_ir___samsung_8hpp_source_1l00087">87</link> of file <link linkend="_ir___samsung_8hpp_source">ir_Samsung.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga5d194d783811b52669eb1c1ab17a3a0f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga5d194d783811b52669eb1c1ab17a3a0f_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga7b4ca49d8fceaf6ccfa26df2d1b553d5"/><section>
    <title>sendSAMSUNG()</title>
<indexterm><primary>sendSAMSUNG</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendSAMSUNG</secondary></indexterm>
<para><computeroutput>void IRsend::sendSAMSUNG (unsigned long data, int nbits)</computeroutput></para><para>
Definition at line <link linkend="_ir___samsung_8hpp_source_1l00256">256</link> of file <link linkend="_ir___samsung_8hpp_source">ir_Samsung.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga7b4ca49d8fceaf6ccfa26df2d1b553d5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga4daa3f9a1c496072f2e17cdcf93f3906"/><section>
    <title>sendSamsungRepeat()</title>
<indexterm><primary>sendSamsungRepeat</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendSamsungRepeat</secondary></indexterm>
<para><computeroutput>void IRsend::sendSamsungRepeat ( )</computeroutput></para>
<para>Send repeat Repeat commands should be sent in a 110 ms raster. </para>
<para>
Definition at line <link linkend="_ir___samsung_8hpp_source_1l00078">78</link> of file <link linkend="_ir___samsung_8hpp_source">ir_Samsung.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga4daa3f9a1c496072f2e17cdcf93f3906_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga4daa3f9a1c496072f2e17cdcf93f3906_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga81b608682a7f7f89e0b1fd00756bb714"/><section>
    <title>sendSharp()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>sendSharp</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendSharp</secondary></indexterm>
<para><computeroutput>void IRsend::sendSharp (uint8_t aAddress, uint8_t aCommand, uint_fast8_t aNumberOfRepeats)</computeroutput></para><para>
Definition at line <link linkend="_ir___denon_8hpp_source_1l00085">85</link> of file <link linkend="_ir___denon_8hpp_source">ir_Denon.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga81b608682a7f7f89e0b1fd00756bb714_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga81b608682a7f7f89e0b1fd00756bb714_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga0b0933040532b8c1cbc7cbf17ab7edb5"/><section>
    <title>sendSharp()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>sendSharp</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendSharp</secondary></indexterm>
<para><computeroutput>void IRsend::sendSharp (unsigned int address, unsigned int command)</computeroutput></para><para>
Definition at line <link linkend="_ir___denon_8hpp_source_1l00247">247</link> of file <link linkend="_ir___denon_8hpp_source">ir_Denon.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga0b0933040532b8c1cbc7cbf17ab7edb5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga64cfeb90c005e597c62586ea19b93b12"/><section>
    <title>sendSony()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>sendSony</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendSony</secondary></indexterm>
<para><computeroutput>void IRsend::sendSony (uint16_t aAddress, uint8_t aCommand, uint_fast8_t aNumberOfRepeats, uint8_t numberOfBits = <computeroutput><link linkend="__i_r_protocol_8h_1a8a2dbf77031a92783a200b9902c8459b">SIRCS_12_PROTOCOL</link></computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="_ir___sony_8hpp_source_1l00074">74</link> of file <link linkend="_ir___sony_8hpp_source">ir_Sony.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga64cfeb90c005e597c62586ea19b93b12_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga64cfeb90c005e597c62586ea19b93b12_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga8d1abfc5910cf3f0964498e8bf22bd4e"/><section>
    <title>sendSony()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>sendSony</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendSony</secondary></indexterm>
<para><computeroutput>void IRsend::sendSony (unsigned long data, int nbits)</computeroutput></para>
<para>Old version with MSB first data </para>
<para>
Definition at line <link linkend="_ir___sony_8hpp_source_1l00213">213</link> of file <link linkend="_ir___sony_8hpp_source">ir_Sony.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga8d1abfc5910cf3f0964498e8bf22bd4e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga8acfdbfc54f8b76d49acb799f5b40805"/><section>
    <title>sendWhynter()</title>
<indexterm><primary>sendWhynter</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sendWhynter</secondary></indexterm>
<para><computeroutput>void IRsend::sendWhynter (unsigned long data, int nbits)</computeroutput></para><para>
Definition at line <link linkend="_ir___whynter_8hpp_source_1l00030">30</link> of file <link linkend="_ir___whynter_8hpp_source">ir_Whynter.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga8acfdbfc54f8b76d49acb799f5b40805_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga155ad672d0494903d7c89e73650879ae"/><section>
    <title>toFrequencyCode()</title>
<indexterm><primary>toFrequencyCode</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>toFrequencyCode</secondary></indexterm>
<para><computeroutput>static uint16_t toFrequencyCode (uint16_t frequency)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_ir___pronto_8hpp_source_1l00210">210</link> of file <link linkend="_ir___pronto_8hpp_source">ir_Pronto.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga155ad672d0494903d7c89e73650879ae_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga155ad672d0494903d7c89e73650879ae_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga01388575997ce2531098a606a8a25521"/><section>
    <title>toFrequencyKHz()</title>
<indexterm><primary>toFrequencyKHz</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>toFrequencyKHz</secondary></indexterm>
<para><computeroutput>static unsigned int toFrequencyKHz (uint16_t code)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_ir___pronto_8hpp_source_1l00070">70</link> of file <link linkend="_ir___pronto_8hpp_source">ir_Pronto.hpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga01388575997ce2531098a606a8a25521_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_group___decoder_1ga356fabeed3a4b0a010a35550e86285c5"/><section>
    <title>toTimebase()</title>
<indexterm><primary>toTimebase</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>toTimebase</secondary></indexterm>
<para><computeroutput>static uint16_t toTimebase (uint16_t frequency)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_ir___pronto_8hpp_source_1l00206">206</link> of file <link linkend="_ir___pronto_8hpp_source">ir_Pronto.hpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga356fabeed3a4b0a010a35550e86285c5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___decoder_ga356fabeed3a4b0a010a35550e86285c5_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_group___decoder_1gaf9adc578f613a3d00e25f6a7fe1d371b"/><section>
    <title>sLastSendToggleValue</title>
<indexterm><primary>sLastSendToggleValue</primary><secondary>Decoders and encoders for different protocols</secondary></indexterm>
<indexterm><primary>Decoders and encoders for different protocols</primary><secondary>sLastSendToggleValue</secondary></indexterm>
<para><computeroutput>bool sLastSendToggleValue = false</computeroutput></para><para>
Definition at line <link linkend="_ir___r_c5___r_c6_8hpp_source_1l00043">43</link> of file <link linkend="_ir___r_c5___r_c6_8hpp_source">ir_RC5_RC6.hpp</link>.</para>
</section>
</section>
</section>
